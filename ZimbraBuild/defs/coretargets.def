# __CORE

core: CUR_DEST_ROOT := $(CORE_DEST_ROOT)
core: CUR_PACKAGE_SPEC := $(BUILD_ROOT)/zimbra-core.spec
core: CUR_PACKAGE_NAME := zimbra-core
core: $(PACKAGE_DIR) core_stage core_pkg_spec_$(PACKAGE_EXT)
	(cd $(CUR_DEST_ROOT); \
		$(PACKAGING_COMMAND) $(PACKAGING_OPTIONS) )

core_pkg_spec_ccs:

core_pkg_spec_pkg: $(BUILD_ROOT)/resources/zimbra-core $(BUILD_ROOT)/zimbra-core.Info.plist $(BUILD_ROOT)/zimbra-core.Description.plist
	rm -rf $(CORE_DEST_DIR)/$(JAVA_FILE)$(JAVA_VERSION)

$(BUILD_ROOT)/zimbra-core.Description.plist:
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.Description.plist | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/@@MAJOR@@/$(MAJOR)/' \
		-e 's/@@MINOR@@/$(MINOR)/' > $@

$(BUILD_ROOT)/zimbra-core.Info.plist:
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.Info.plist | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/@@MAJOR@@/$(MAJOR)/' \
		-e 's/@@BUILDNUM@@/$(BUILDNUM)/' \
		-e 's/@@MINOR@@/$(MINOR)/' > $@

$(BUILD_ROOT)/resources/zimbra-core:
	mkdir -p $@
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.preflight $@/preflight
	chmod 755 $@/preflight
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.postflight $@/postflight
	chmod 755 $@/postflight
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.postinstall $@/postinstall
	chmod 755 $@/postinstall
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.preupgrade $@/preupgrade
	chmod 755 $@/preupgrade
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.postupgrade $@/postupgrade
	chmod 755 $@/postupgrade
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/InstallationCheck $@/InstallationCheck
	chmod 755 $@/InstallationCheck
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/VolumeCheck $@/VolumeCheck
	chmod 755 $@/VolumeCheck

core_pkg_spec_deb: $(CORE_DEST_ROOT)/DEBIAN/control

$(CORE_DEST_ROOT)/DEBIAN: force
	mkdir -p $@
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.pre $@/preinst
	cat $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.post >> $@/postinst
	chmod 555 $@/*

$(CORE_DEST_ROOT)/DEBIAN/control: $(CORE_DEST_ROOT)/DEBIAN force
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.deb | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/@@ARCH@@/$(ARCH)/' \
		-e 's/^Copyright:/$(RPMCOPYRIGHTSTR):/' \
		-e '/^%pre$$/ r zimbra-core.pre' \
		-e '/^%post$$/ r zimbra-core.post' > $@

core_pkg_spec_rpm: $(BUILD_ROOT)/zimbra-core.spec

$(BUILD_ROOT)/zimbra-core.spec:
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.pre $(BUILD_ROOT)
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.post $(BUILD_ROOT)
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.spec | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/@@COMPAT_LIBSTDC@@/$(COMPAT_LIBSTDC)/' \
		-e 's/^Copyright:/$(RPMCOPYRIGHTSTR):/' \
		-e '/^%pre$$/ r zimbra-core.pre' \
		-e '/^%post$$/ r zimbra-core.post' > $(BUILD_ROOT)/zimbra-core.spec
	rm -f zimbra-core.pre
	rm -f zimbra-core.post
	(cd $(CORE_DEST_ROOT); find opt -type f -o -type l -maxdepth 2 \
		| sed -e 's|^|%attr(-, zimbra, zimbra) /|' >> \
		$(BUILD_ROOT)/zimbra-core.spec )
	echo "%attr(755, root, root) /opt/zimbra/bin" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/docs" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, root, root) /opt/zimbra/contrib" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, root, root) /opt/zimbra/libexec" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, root, root) /opt/zimbra/logger" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/conf" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/db" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, root) /opt/zimbra/jdk$(JAVA_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, root) /opt/zimbra/lib" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/zimbramon" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/bdb-$(BDB_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/openssl-$(OPENSSL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/heimdal-$(HEIMDAL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/curl-$(CURL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, zimbra) /opt/zimbra/$(SASL_DIR)-$(SASL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/openldap-clibs-$(LDAP_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/tcmalloc-$(TCMALLOC_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec

core_stage: $(CORE_COMPONENTS)

$(CORE_DEST_DIR):
	mkdir -p $@
	cp $(ENV_FILE_SOURCE) $(CORE_DEST_DIR)/$(ENV_FILE_DEST)
	cp $(PROFILE_SOURCE) $(CORE_DEST_DIR)/$(PROFILE_DEST)
	cp $(EXRC_SOURCE) $(CORE_DEST_DIR)/$(EXRC_DEST)
	cp $(VIMINFO_SOURCE) $(CORE_DEST_DIR)/$(VIMINFO_DEST)
	cp $(LDAPRC_SOURCE) $(CORE_DEST_DIR)/$(LDAPRC_DEST)
	chmod 644 $(CORE_DEST_DIR)/$(VIMINFO_DEST)

$(CORE_DEST_DIR)/docs:
	mkdir -p $@
	cp $(LICENSE_DIR)/zimbra/zpl-full.txt $@/ZPL.txt
	cp $(LICENSE_DIR)/zimbra/ypl-full.txt $@/YPL.txt
	cp $(LICENSE_DIR)/zimbra/zimbra_public_eula_2.1.txt $@/zimbra_public_eula_2.1.txt
	cp $(SERVICE_DIR)/docs/*txt $@
	cp $(SERVICE_DIR)/docs/*html $@
	cp $(MIG_TOOLS_DIR)/ReadMe.txt $@/zmztozmig.txt

$(CORE_DEST_DIR)/zimbramon: $(CORE_DEST_DIR)/zimbramon/bin $(CORE_DEST_DIR)/zimbramon/lib $(CORE_DEST_DIR)/zimbramon/crontabs $(CORE_DEST_DIR) 
	@echo "*** Creating zimbramon"
	mkdir -p $@
	(cd $(CORE_DEST_DIR)/zimbramon; tar xzf $(RRD_SOURCE).tar.gz)
	mkdir -p $(CORE_DEST_DIR)/logger/db/work
	cp -f $(PACKAGE_CONF_DIR)/Img/connection_failed.gif \
		$(CORE_DEST_DIR)/logger/db/work
	cp -f $(PACKAGE_CONF_DIR)/Img/data_not_available.gif \
		$(CORE_DEST_DIR)/logger/db/work

$(CORE_DEST_DIR)/zimbramon/crontabs:
	mkdir -p $@
	cp -f $(PACKAGE_CONF_DIR)/Env/crontabs/* $(CORE_DEST_DIR)/zimbramon/crontabs/

$(CORE_DEST_DIR)/zimbramon/bin:
	mkdir -p $(CORE_DEST_DIR)/zimbramon/bin
	(cd $(CORE_DEST_DIR)/zimbramon/bin; \
	tar xzf $(PERL_LIB_SOURCE)/perlbin.tgz)
	mkdir -p $(CORE_DEST_DIR)/libexec
	cp -pr $(CORE_DEST_DIR)/zimbramon/bin/sa-learn $(CORE_DEST_DIR)/libexec/

$(CORE_DEST_DIR)/zimbramon/lib:
	mkdir -p $(CORE_DEST_DIR)/zimbramon/lib
	(cd $(CORE_DEST_DIR)/zimbramon/lib; \
	tar xzf $(PERL_LIB_SOURCE)/perllib.tgz)
	cp -R $(BUILD_ROOT)/lib/Zimbra $(CORE_DEST_DIR)/zimbramon/lib

$(CORE_DEST_DIR)/lib: $(WEBAPP_DIR)/service.war $(LDAP_DEST_DIR)/$(LDAP_DIR)-$(LDAP_VERSION) $(NATIVE_DIR)/build/libzimbra-native.$(JNI_EXT)
	mkdir -p $@
	cp -pr $(SERVICE_DIR)/build/dist/lib/* $@
	cp -pr $(LDAP_DEST_DIR)/$(LDAP_DIR)-$(LDAP_VERSION)/lib/* $@
	cp -pr $(SERVICE_DIR)/build/dist/lib/* $@
	cp -pr $(NATIVE_DIR)/build/libzimbra-native.$(JNI_EXT) $@
	(cd $@; tar xzf $(THIRD_PARTY_BUILDS)/$(BUILD_PLATFORM)/mysql/mysql-$(MYSQL_CLIENT_VERSION).tgz)

$(NATIVE_DIR)/build/libzimbra-native.$(JNI_EXT):
	(cd $(NATIVE_DIR); make JAVA_BINARY=$(JAVA_BINARY))

$(LAUNCHER_DIR)/build/zmmailboxdmgr:
	(cd $(LAUNCHER_DIR); make JAVA_BINARY=$(JAVA_BINARY))

$(CORE_DEST_DIR)/jdk$(JAVA_VERSION):
	@echo "*** Creating java"
	(cd $(CORE_DEST_DIR); tar xzf $(JAVA_SOURCE).tgz;)
	rm -rf $@/jre/lsrc.zip
	rm -rf $@/demo
	rm -rf $@/sample
	rm -rf $@/jre/lib/audio/soundbank.gm
	rm -rf $@/jre/bin/rmid
	rm -rf $@/jre/bin/tnameserv
	rm -rf $@/jre/bin/orbd
	rm -rf $@/jre/bin/javaws
	rm -rf $@/jre/javaws
	rm -rf $@/jre/lib/javaws
	rm -rf $@/jre/lib/javaws.jar
	rm -rf $@/jre/lib/i386/client/classes.jsa

$(CORE_DEST_DIR)/db: $(WEBAPP_DIR)/service.war
	mkdir -p $@
	cp -R $(SERVICE_DIR)/src/db/mysql/db.sql $@
	cp -R $(SERVICE_DIR)/src/db/mysql/create_database.sql $@
	cp -R $(SERVICE_DIR)/build/versions-init.sql $@

$(CORE_DEST_DIR)/conf: $(WEBAPP_DIR)/service.war
	mkdir -p $@
	cp $(PACKAGE_CONF_DIR)/Conf/swatchrc $@/swatchrc.in
	cp $(PACKAGE_CONF_DIR)/Conf/logswatchrc $@/logswatchrc
	cp $(PACKAGE_CONF_DIR)/Conf/auditswatchrc $@/logswatchrc.in
	cp $(SERVICE_DIR)/build/dist/conf/localconfig.xml $@
	cp $(SERVICE_DIR)/build/dist/conf/log4j.properties $@/log4j.properties.in
	cp $(PACKAGE_CONF_DIR)/Conf/zmssl.cnf.in $@
	cp $(SERVICE_DIR)/conf/amavisd.conf.in $@
	cp $(SERVICE_DIR)/conf/dspam.conf $@
	cp $(SERVICE_DIR)/conf/zmlogrotate $@
	cp $(SERVICE_DIR)/conf/clamd.conf.in $@
	cp $(SERVICE_DIR)/conf/freshclam.conf.in $@
	cp $(SERVICE_DIR)/conf/postfix_header_checks.in $@
	mkdir -p $@/nginx/includes
	mkdir -p $@/nginx/templates
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.mail.imaps.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.mail.imap.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.mail.pop3s.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.mail.pop3.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.mail.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.main.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.memcache.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.mode-both.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.mode-https.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.mode-http.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.mode-mixed.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.mode-redirect.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.mode-both.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.mode-https.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.mode-http.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.mode-mixed.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.mode-redirect.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.https.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.http.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx/nginx.conf.web.template $@/nginx/templates/
	cp $(SERVICE_DIR)/conf/nginx.conf.in $@
	cp $(SERVICE_DIR)/conf/salocal.cf $@/salocal.cf.in
	cp $(SERVICE_DIR)/conf/zmmta.cf-$(MAILBOXD_SERVER) $@/zmmta.cf
	cp $(SERVICE_DIR)/conf/timezones.ics $@
	cp $(SERVICE_DIR)/conf/zimbra.ld.conf $@
	cp $(SERVICE_DIR)/conf/postfix_recipient_restrictions.cf $@
	cp -Rf $(SERVICE_DIR)/conf/externaldirsync $@/externaldirsync
	cp -Rf $(SERVICE_DIR)/build/dist/conf/rights $@/rights
	rm -f $@/rights/zimbra-rights-domainadmin.xml-template
	cp -Rf $(SERVICE_DIR)/build/dist/conf/msgs $@/msgs
	mkdir -p $@/spamassassin
	cp $(SERVICE_DIR)/conf/spamassassin/* $@/spamassassin
	mkdir -p $@/attrs
	cp -f $(SERVICE_DIR)/build/dist/conf/attrs/* $@/attrs

$(CORE_DEST_DIR)/conf/com.zimbra.zcs.plist:
	mkdir -p $(CORE_DEST_DIR)/conf
	cp $(SERVICE_DIR)/conf/com.zimbra.zcs.plist $@

$(CORE_DEST_DIR)/libexec: $(LAUNCHER_DIR)/build/zmmailboxdmgr
	@echo "*** Installing libexec"
	mkdir -p $@/installer/util/modules
	mkdir -p $@/installer/bin
	cp -f $(PACKAGE_CONF_DIR)/Install/zmsetup.pl $@/zmsetup.pl
	cp -f $(PACKAGE_CONF_DIR)/Upgrade/zmupgrade.pm $@/zmupgrade.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/install.sh $@/installer/install.sh
	cp -f $(BUILD_ROOT)/rpmconf/Build/get_plat_tag.sh $@/installer/bin/get_plat_tag.sh
	cp -f $(PACKAGE_CONF_DIR)/Install/install-mac.sh $@/installer/install-mac.sh
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/*sh $@/installer/util
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/modules/*sh $@/installer/util/modules
	mkdir -p $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/Migrate.pm $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/migrate*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/migrate*sh $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/optimize*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/fix*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/clearArchivedFlag.pl $@/scripts
	cp -f $(PACKAGE_CONF_DIR)/Install/postinstall.pm $@/postinstall.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/preinstall.pm $@/preinstall.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/addUser.sh $@/addUser.sh
	cp -f $(LAUNCHER_DIR)/build/zmmailboxdmgr $@
	cp -f $(LAUNCHER_DIR)/build/zmmailboxdmgr.unrestricted $@
	cp $(SERVICE_DIR)/src/libexec/* $@
	cp $@/swatch $@/logswatch
	cp $@/swatch $@/auditswatch
	cp -f $(BUILD_ROOT)/rpmconf/Build/get_plat_tag.sh $@

$(CORE_DEST_DIR)/bin:
	mkdir -p $@
	cp -R $(SERVICE_DIR)/build/dist/bin/[a-z]* $@
	rm -f $(CORE_DEST_DIR)/bin/zmtransserver.bat
	rm -rf $(CORE_DEST_DIR)/bin/zmexternaldirsync
	cp $(ZIMBRA_BIN_DIR)/zmswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmlogswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmauditswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmcertmgr $@
	cp $(ZIMBRA_BIN_DIR)/zmtlsctl $@
	cp $(ZIMBRA_BIN_DIR)/zmsyslogsetup $@
	cp $(LDAP_DEST_ROOT)/opt/zimbra/$(LDAP_DIR)-$(LDAP_VERSION)/bin/ldapsearch $@
	cp $(ZIMBRA_BIN_DIR)/zmantispamctl $@
	cp $(ZIMBRA_BIN_DIR)/zmantivirusctl $@
	cp $(ZIMBRA_BIN_DIR)/zmcontrol $@
	cp $(ZIMBRA_BIN_DIR)/zmloggerctl $@
	cp $(ZIMBRA_BIN_DIR)/zmstorectl $@
	cp $(ZIMBRA_BIN_DIR)/zmproxyctl $@
	cp $(ZIMBRA_BIN_DIR)/zmmtactl $@
	cp $(ZIMBRA_BIN_DIR)/zmspellctl $@
	cp $(ZIMBRA_BIN_DIR)/zmapachectl $@

$(CORE_DEST_DIR)/contrib:
	mkdir -p $@
	cp -R $(SERVICE_DIR)/src/contrib/* $@

$(CORE_DEST_DIR)/lib/libpcre.dylib: $(CORE_DEST_DIR)/lib
	(cd $(CORE_DEST_DIR); tar xzf $(THIRD_PARTY_BUILDS)/$(BUILD_PLATFORM)/pcre/pcre-$(PCRE_VERSION).tgz)
	rm -rf $(CORE_DEST_DIR)/include

$(CORE_DEST_DIR)/lib/libpopt.0.dylib: $(CORE_DEST_DIR)/lib
	(cd $(CORE_DEST_DIR); tar xzf $(THIRD_PARTY_BUILDS)/$(BUILD_PLATFORM)/popt/popt-$(POPT_VERSION).tgz)
	rm -rf $(CORE_DEST_DIR)/include

$(CORE_DEST_DIR)/lib/libexpat.dylib: $(CORE_DEST_DIR)/lib
	(cd $(CORE_DEST_DIR); tar xzf $(THIRD_PARTY_BUILDS)/$(BUILD_PLATFORM)/expat/expat-$(EXPAT_VERSION).tgz)
	rm -rf $(CORE_DEST_DIR)/include

$(CORE_DEST_DIR)/$(BDB_DIR):
	@echo "*** Creating bdb"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(BDB_SOURCE).tgz; chmod u+w $(BDB_DIR)/bin/*)
	rm -rf $(CORE_DEST_DIR)/$(BDB_DIR)/docs/java

$(CORE_DEST_DIR)/$(OPENSSL_DIR)-$(OPENSSL_VERSION):
	@echo "*** Creating openssl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(OPENSSL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(HEIMDAL_DIR)-$(HEIMDAL_VERSION):
	@echo "*** Creating heimdal"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(HEIMDAL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(CURL_DIR)-$(CURL_VERSION):
	@echo "*** Creating curl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(CURL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(SASL_DIR)-$(SASL_VERSION):
	@echo "*** Creating cyrus-sasl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(SASL_SOURCE).tgz;)
	mkdir -p $(CORE_DEST_DIR)/$(SASL_DIR)-$(SASL_VERSION)/etc
	cp -f $(SERVICE_DIR)/conf/saslauthd.conf.in $(CORE_DEST_DIR)/$(SASL_DIR)-$(SASL_VERSION)/etc/
	cp -f $(SERVICE_DIR)/conf/postfix_sasl_smtpd.conf $(CORE_DEST_DIR)/$(SASL_DIR)-$(SASL_VERSION)/lib/sasl2/smtpd.conf

$(CORE_DEST_DIR)/$(LDAP_DIR)-clibs-$(LDAP_VERSION):
	@echo "*** Creating openldap client libraries"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(LDAP_CLIBS).tgz;)

$(CORE_DEST_DIR)/$(TCMALLOC_DIR):
	@echo "*** Creating tcmalloc client libraries"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xfz $(TCMALLOC_SOURCE).tgz;)
