#!/usr/bin/perl
#/*
# * ***** BEGIN LICENSE BLOCK *****
# * 
# * Zimbra Desktop
# * Copyright (C) 2009 Zimbra, Inc.
# * 
# * The contents of this file are subject to the Yahoo! Public License
# * Version 1.0 ("License"); you may not use this file except in
# * compliance with the License.  You may obtain a copy of the License at
# * http://www.zimbra.com/license.
# * 
# * Software distributed under the License is distributed on an "AS IS"
# * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# * 
# * ***** END LICENSE BLOCK *****
# */
#
# ZD runner
#

use strict;
use warnings;

sub find_and_replace($$) {
    my ($file, $tokens) = @_;
    my $tmpfile = $file . '.tmp';
    
    open(FIN, "<$file") or die("Error: cannot open file $file\n");
    open(FOUT, ">$tmpfile") or die("Error: cannot open file $tmpfile\n");
    
    my $line;
    while($line = <FIN>){
        foreach my $key (keys(%$tokens)) {
            my $pos = index($line, $key);
            while ($pos >= 0) {
                substr($line, $pos, length($key), $tokens->{$key});    
                $pos = index($line, $key);
            }
        }
        print FOUT $line;
    }
    
    close FIN;
    close FOUT;
    
    my (undef, undef, $mode) = stat($file);
    unlink $file;
    rename $tmpfile, $file;
    chmod $mode, $file;
}

sub get_random_id() {
	my @n;
	srand(time ^ ($$ + ($$ << 15)) ^ int(rand(0xFFFF)));
	push(@n, sprintf("%04x", int(rand(0xFFFF)))) for (0..7);
	return "$n[0]$n[1]-$n[2]-$n[3]-$n[4]-$n[5]$n[6]$n[7]";
}

my $home_dir = $ENV{HOME};
die("Error: unable to get user home directory") unless ($home_dir);

my $app_root = "@INSTALL.APP.ROOT@";
my $data_root = "$home_dir/Library/Zimbra Desktop";

unless (-e $data_root) {
	# copy data files
	system("cp -R -f \"$app_root/data\" \"$data_root\"");
	# copy app bundle
	system("cp -R -f \"$app_root/Zimbra Desktop.app\" \"$data_root\"");

	my $inst_id = get_random_id();
	my $tokens = {
		'@install.app.root@' => $app_root, 
		'@install.data.root@' => $data_root,
		'@install.key@' => $inst_id
	};
	my $infotok = {'<string>zdrun</string>' => '<string>prism</string>'};
	
	# fix data files
	find_and_replace("$data_root/conf/localconfig.xml", $tokens);
	find_and_replace("$data_root/jetty/etc/jetty.xml", $tokens);
	find_and_replace("$data_root/bin/zdesktop", $tokens);
	find_and_replace("$data_root/zdesktop.webapp/webapp.ini", $tokens);
	find_and_replace("$data_root/Zimbra Desktop.app/Contents/Resources/application.ini", $tokens);
	find_and_replace("$data_root/Zimbra Desktop.app/Contents/Info.plist", $infotok);

	# install zdesktop service
	my $plist = "$home_dir/Library/LaunchAgents/com.zimbra.desktop.plist";
	mkdir("$home_dir/Library/LaunchAgents");
	system("cp -f \"$app_root/macos/launchd.plist\" \"$plist\"");
	find_and_replace($plist, $tokens);
	find_and_replace("$data_root/bin/zdesktop", {'/dev/null &' => '/dev/null'});
	system("chmod +x \"$data_root/bin/zdesktop\"");
	system("/bin/launchctl unload \"$plist\"");
	system("/bin/launchctl load \"$plist\"");
}

# launch prism
exec("\"$data_root/Zimbra Desktop.app/Contents/MacOS/prism\"");

