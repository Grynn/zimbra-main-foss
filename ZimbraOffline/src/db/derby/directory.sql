-- 
-- ***** BEGIN LICENSE BLOCK *****
-- 
-- Portions created by Zimbra are Copyright (C) 2006 Zimbra, Inc.
-- All Rights Reserved.
-- 
-- The Original Code is: Zimbra Network
-- 
-- ***** END LICENSE BLOCK *****
-- 


-- -----------------------------------------------------------------------
-- directory
-- -----------------------------------------------------------------------

CREATE TABLE directory (
   entry_id    INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   entry_type  CHAR(4) NOT NULL,
   entry_name  VARCHAR(128) NOT NULL,
   zimbra_id   CHAR(36),
   modified    SMALLINT NOT NULL
);

CREATE UNIQUE INDEX i_directory_zimbra_id ON directory(zimbra_id);
CREATE UNIQUE INDEX i_directory_entry_type_name ON directory(entry_type, entry_name);


CREATE TABLE directory_attrs (
   entry_id    INTEGER NOT NULL,
   name        VARCHAR(255) NOT NULL,
   value       VARCHAR(10240) NOT NULL,

   CONSTRAINT fk_dattr_entry_id FOREIGN KEY (entry_id) REFERENCES directory(entry_id)
      ON DELETE CASCADE
);

CREATE INDEX i_dattr_entry_id_name ON directory_attrs(entry_id, name);
CREATE INDEX i_dattr_name ON directory_attrs(name);


CREATE TABLE directory_leaf (
   entry_id    INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   parent_id   INTEGER NOT NULL,
   entry_type  CHAR(4) NOT NULL,
   entry_name  VARCHAR(128) NOT NULL,
   zimbra_id   CHAR(36) NOT NULL,

   CONSTRAINT fk_dleaf_entry_id FOREIGN KEY (parent_id) REFERENCES directory(entry_id)
      ON DELETE CASCADE
);

CREATE UNIQUE INDEX i_dleaf_zimbra_id ON directory_leaf(zimbra_id);
CREATE UNIQUE INDEX i_dleaf_parent_entry_type_name ON directory_leaf(parent_id, entry_type, entry_name);


CREATE TABLE directory_leaf_attrs (
   entry_id    INTEGER NOT NULL,
   name        VARCHAR(255) NOT NULL,
   value       VARCHAR(10240) NOT NULL,

   CONSTRAINT fk_dleafattr_entry_id FOREIGN KEY (entry_id) REFERENCES directory_leaf(entry_id)
      ON DELETE CASCADE
);

CREATE INDEX i_dleafattr_entry_id_name ON directory_leaf_attrs(entry_id, name);
CREATE INDEX i_dleafattr_name ON directory_leaf_attrs(name);
