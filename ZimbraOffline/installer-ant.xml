<project name="Offline-Installer" default="installer-make">

	<property file="build.properties"/>

        <property name="media_win32" value="zdesktop_${offline.filever}_build_${offline.buildid}_${offline.suffix_win32}"/>
        <property name="media_macos" value="zdesktop_${offline.filever}_build_${offline.buildid}_${offline.suffix_macos}"/>
        <property name="media_linux" value="zdesktop_${offline.filever}_build_${offline.buildid}_${offline.suffix_linux}"/>

		<property name="install4j.dir" value="/home/build/zdesktop/install4j"/>
        <property name="build.dir" location="../ZimbraBuild/i386" />

        <taskdef name="install4j" classname="com.install4j.Install4JTask" classpath="${install4j.dir}/bin/ant.jar"/>

        <taskdef resource="net/sf/antcontrib/antlib.xml">
                <classpath>
                        <pathelement location="../ZimbraCommon/jars/ant-contrib-1.0b1.jar" />
                </classpath>
        </taskdef>

	<target name="installer-patch">
		<copy todir="${install4j.dir}/resource/messages" overwrite="true">
			<fileset dir="src/installer/install4j.patch" includes="*.utf8 languages"/>
		</copy>
		<copy todir="${install4j.dir}/resource" overwrite="true">
			<fileset dir="src/installer/install4j.patch" includes="i4jdel.exe"/>
		</copy>
	</target>

	<target name="installer-clean">
		<delete dir="${build.dir}" includes="zdesktop*" />
	</target>

	<target name="installer-pack-media">
		<install4j projectfile="ZimbraOffline.install4j" verbose="true" release="${offline.version}"
		           destination="${build.dir}" buildids="44,198394,59040">
       		<variable name="offline_channel" value="${offline.channel}"/>
       		<variable name="offline_relabel" value="${offline.relabel}"/>
       		<variable name="offline_version" value="${offline.version}"/>
       		<variable name="offline_buildid" value="${offline.buildid}"/>
			<variable name="offline_ausurl" value="${offline.aus.host}${offline.aus.path}"/>
			<variable name="offline_ausurl_dev" value="${offline.ausdev.host}${offline.ausdev.path}"/>
		</install4j>

		<gen-update-php builddir="${build.dir}" ausurl="${offline.aus.host}${offline.aus.path}"/>
	</target>

	<target name="installer-pack-media-dev">
		<install4j projectfile="ZimbraOffline.install4j" verbose="true" release="${offline.version}"
		           destination="${build.dir}/dev" buildids="44,198394,59040">
       		<variable name="offline_channel" value="${offline.channel}"/>
       		<variable name="offline_relabel" value="${offline.relabel}"/>
       		<variable name="offline_version" value="${offline.version}"/>
       		<variable name="offline_buildid" value="${offline.buildid}"/>
			<variable name="offline_ausurl" value="${offline.ausdev.host}${offline.ausdev.path}"/>
		</install4j>

		<gen-update-php builddir="${build.dir}/dev" ausurl="${offline.ausdev.host}${offline.ausdev.path}"/>
	</target>

	<target name="installer-make">
			<antcall target="installer-patch"/>
        	<ant dir="." target="offline-make-install-files" inheritAll="false"/>
        	<antcall target="installer-pack-media"/>
        	<antcall target="symlink-media"/>
	</target>

        <macrodef name="gen-update-php">
			<attribute name="builddir"/>
			<attribute name="ausurl"/>
			<sequential>
                <copy file="src/installer/update.php" todir="@{builddir}" overwrite="true"/>
                <replace file="@{builddir}/update.php" token="@ausurl@" value="@{ausurl}"/>
                <replace file="@{builddir}/update.php" token="@version@" value="${offline.version}"/>
                <replace file="@{builddir}/update.php" token="@buildid@" value="${offline.buildid}"/>
                <replace file="@{builddir}/update.php" token="@suffix_win32@" value="${offline.suffix_win32}"/>
                <replace file="@{builddir}/update.php" token="@suffix_macos@" value="${offline.suffix_macos}"/>
                <replace file="@{builddir}/update.php" token="@suffix_linux@" value="${offline.suffix_linux}"/>

                <if><available file="@{builddir}/${media_win32}" type="file"/><then>
                        <checksum file="@{builddir}/${media_win32}" property="hash_win32"/>
                        <length file="@{builddir}/${media_win32}" property="size_win32"/>
                        <replace file="@{builddir}/update.php" token="@hash_win32@" value="${hash_win32}"/>
                        <replace file="@{builddir}/update.php" token="@size_win32@" value="${size_win32}"/>
                </then></if>

                <if><available file="@{builddir}/${media_macos}" type="file"/><then>
                        <checksum file="@{builddir}/${media_macos}" property="hash_macos"/>
                        <length file="@{builddir}/${media_macos}" property="size_macos"/>
                        <replace file="@{builddir}/update.php" token="@hash_macos@" value="${hash_macos}"/>
                        <replace file="@{builddir}/update.php" token="@size_macos@" value="${size_macos}"/>
                </then></if>

                <if><available file="@{builddir}/${media_linux}" type="file"/><then>
                        <checksum file="@{builddir}/${media_linux}" property="hash_linux"/>
                        <length file="@{builddir}/${media_linux}" property="size_linux"/>
                        <replace file="@{builddir}/update.php" token="@hash_linux@" value="${hash_linux}"/>
                        <replace file="@{builddir}/update.php" token="@size_linux@" value="${size_linux}"/>
                </then></if>
			</sequential>
        </macrodef>

	<target name="symlink-media">
		<symlink link="${build.dir}/zdesktop_linux_i686.sh" resource="${media_linux}"/>
		<symlink link="${build.dir}/zdesktop_macos_intel.dmg" resource="${media_macos}"/>
		<symlink link="${build.dir}/zdesktop_win32.exe" resource="${media_win32}"/>
	</target>
</project>

