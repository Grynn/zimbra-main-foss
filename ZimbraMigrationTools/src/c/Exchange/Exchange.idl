// ExchangeMigration.idl : IDL source for ExchangeMigration
//

// This file will be processed by the MIDL tool to
// produce the type library (Exchange.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";



typedef enum FolderType{
    Mail = 1,
    Contacts = 2,
    Calendar = 3,
}FolderType;

typedef [
    uuid(C5E4267B-AE6C-4E31-956A-06D8094D0CBE),
    version(1.0),
    helpstring("A UDT for folder objects")
]

struct UDTFolder {
    [helpstring("Type of Folder")] FolderType Type;
    [helpstring("Name of the Folder")] BSTR Name;
    [helpstring("Total Items in the Folder")] long Items;
} UDTFolder;

typedef [
    uuid(C5E4267A-AE6C-4E31-956A-06D8094D0CBE),
    version(1.0),
    helpstring("A UDT for Item objects")
]

struct UDTItem {
    [helpstring("Type of Item")] FolderType Type;
    [helpstring("EntryID of the Item")] BSTR EntryId;
    [helpstring("Creation Date of the  Items in the Folder")] VARIANT CreationDate;
} UDTItem;


[
	object,
	uuid(68895A46-5AEB-436A-B661-17FDFD7A0CE2),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IfolderObject : IDispatch{
	[propget, id(1)] HRESULT Name([out, retval] BSTR* pVal);
	[propput, id(1)] HRESULT Name([in] BSTR newVal);
	[propget, id(2)] HRESULT Id([out, retval] LONG* pVal);
	[propput, id(2)] HRESULT Id([in] LONG newVal);
	[propget, id(3)] HRESULT ParentPath([out, retval] BSTR* pVal);
	[propput, id(3)] HRESULT ParentPath([in] BSTR newVal);
};
[
    object,
    uuid(C5E4267C-AE6C-4E31-956A-06D8094D0CBE),
    dual,
    nonextensible,
    pointer_default(unique)
]

interface IMapiWrapper : IDispatch {
    [id(1), helpstring("This method can be used to connect to ZCO server")] HRESULT ConnectToServer(BSTR ServerHostName, BSTR Port, BSTR AdminID);
	[id(2), helpstring("Connect to the mail server")] HRESULT GlobalInit([in] BSTR pMAPITarget, [in] BSTR pAdminUser, [in] BSTR pAdminPassword, [out,retval] BSTR* pErrorText);
    [id(3), helpstring("Method to import all the options, input is the tag name for options")] HRESULT ImportMailOptions([in] BSTR OptionsTag);
    [id(4)] HRESULT GetProfilelist([out] VARIANT* Profiles);

    [propget, id(0), helpstring("Returns a UDT Folder in the UDTObject")] 
    HRESULT UDTFolder([out, retval]        
    UDTFolder *pUDT);

    [propput, id(0), helpstring("Sets a UDT Folder in the UDTObject")]
    HRESULT UDTFolder([in]       
    UDTFolder *pUDT);

    [propget, id(6), helpstring("Returns a UDT Item in the UDTObject")] 
    HRESULT UDTItem([out, retval]        
    UDTItem *pUDTItem);

    [propput, id(6), helpstring("Sets a UDT Item in the UDTObject")]
    HRESULT UDTItem([in]       
    UDTItem *pUDTItem);

    [id(5), helpstring("Return successive named values")] 
    HRESULT UDTFolderSequence([in] long start,
    [in] long length, 
    [out, retval] SAFEARRAY(UDTFolder) *SequenceArr);

    [id(7), helpstring("Return successive named Item values")] 
    HRESULT UDTItemSequence([in] long start,
    [in] long length, 
    [out, retval] SAFEARRAY(UDTItem) *SequenceArr);

	/* [id(8), helpstring("Return successive folderobject values")] 
            HRESULT GetFolderObjects([in] long start,
                                [in] long length, 
                                [out, retval] SAFEARRAY(IfolderObject) *Folders);*/

	[id(9), helpstring("method to retreive folder objects")]
			HRESULT  GetFolderObjects([out, retval] VARIANT* vObjects);

	[id(10), helpstring("Disonnect from the mail server")] 
	         HRESULT GlobalUninit([out,retval] BSTR* pErrorText);



};

[
	object,
	uuid(0E3233A0-5359-44FF-B98F-BB0A69D4A948),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IItemObject : IDispatch{
	[propget, id(1)] HRESULT ID([out, retval] BSTR* pVal);
	[propput, id(1)] HRESULT ID([in] BSTR newVal);
	[propget, id(2)] HRESULT Type([out, retval] FolderType* pVal);
	[propput, id(2)] HRESULT Type([in] FolderType newVal);
	[propget, id(3)] HRESULT CreationDate([out, retval] VARIANT* pVal);
	[propput, id(3)] HRESULT CreationDate([in] VARIANT newVal);
	[propget, id(4)] HRESULT Parentfolder([out, retval] IfolderObject** pVal);
	[propput, id(4)] HRESULT Parentfolder([in] IfolderObject* newVal);
	[id(5)] HRESULT GetDataForItem([out, retval] VARIANT* pVal);
};
[
    uuid(33449EAA-8056-4D28-8D42-552B7C6C8954),
    version(1.0),
]

library Exchange {
    importlib("stdole2.tlb");
    [
	uuid(A6A12B55-AE1E-449D-A646-19E0DB020EA2)		
    ]
    coclass MapiWrapper {
	[default] interface IMapiWrapper;
    };
	[
		uuid(9D8CDCEC-28FE-4C15-8763-C174B17B815D)		
	]
	coclass folderObject
	{
		[default] interface IfolderObject;
	};
	[
		uuid(1315040C-D7DA-4C7F-8500-BD9917546D15)		
	]
	coclass ItemObject
	{
		[default] interface IItemObject;
	};
};
//import "shobjidl.idl";
