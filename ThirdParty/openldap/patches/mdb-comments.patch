From 178398242814b2ddef1edc2a01fd3c747c866a81 Mon Sep 17 00:00:00 2001
From: Hallvard Furuseth <hallvard@openldap.org>
Date: Sun, 25 Sep 2011 23:36:49 +0200
Subject: [PATCH] Fix libmdb comments

---
 libraries/libmdb/mdb.c |    8 ++++----
 libraries/libmdb/mdb.h |   10 +++++-----
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/libraries/libmdb/mdb.c b/libraries/libmdb/mdb.c
index 2a1cbb2..a3398e1 100644
--- a/libraries/libmdb/mdb.c
+++ b/libraries/libmdb/mdb.c
@@ -330,7 +330,7 @@ typedef ID	txnid_t;
 #endif
 
 /**	@defgroup lazylock	Lazy Locking
- *	Macros for locks that are't actually needed.
+ *	Macros for locks that aren't actually needed.
  *	The DB view is always consistent because all writes are wrapped in
  *	the wmutex. Finer-grained locks aren't necessary.
  *	@{
@@ -492,7 +492,7 @@ typedef struct MDB_reader {
 	 *	unlikely. If a collision occurs, the results are unpredictable.
 	 */
 typedef struct MDB_txbody {
-		/** Stamp identifying this as an MDB lock file. It must be set
+		/** Stamp identifying this as an MDB file. It must be set
 		 *	to #MDB_MAGIC. */
 	uint32_t	mtb_magic;
 		/** Version number of this lock file. Must be set to #MDB_VERSION. */
@@ -748,7 +748,7 @@ typedef struct MDB_db {
 
 	/** Meta page content. */
 typedef struct MDB_meta {
-		/** Stamp identifying this as an MDB data file. It must be set
+		/** Stamp identifying this as an MDB file. It must be set
 		 *	to #MDB_MAGIC. */
 	uint32_t	mm_magic;
 		/** Version number of this lock file. Must be set to #MDB_VERSION. */
@@ -857,7 +857,7 @@ struct MDB_cursor {
 	/** The @ref mt_dbflag for this database */
 	unsigned char	*mc_dbflag;
 	unsigned short 	mc_snum;	/**< number of pushed pages */
-	unsigned short	mc_top;		/**< index of top page, mc_snum-1 */
+	unsigned short	mc_top;		/**< index of top page, normally mc_snum-1 */
 /** @defgroup mdb_cursor	Cursor Flags
  *	@ingroup internal
  *	Cursor state flags.
diff --git a/libraries/libmdb/mdb.h b/libraries/libmdb/mdb.h
index 5682c8f..6017ef5 100644
--- a/libraries/libmdb/mdb.h
+++ b/libraries/libmdb/mdb.h
@@ -432,7 +432,7 @@ int  mdb_env_get_path(MDB_env *env, const char **path);
 	 * The size should be a multiple of the OS page size. The default is
 	 * 10485760 bytes. The size of the memory map is also the maximum size
 	 * of the database. The value should be chosen as large as possible,
-	 * to accomodate future growth of the database.
+	 * to accommodate future growth of the database.
 	 * This function may only be called after #mdb_env_create() and before #mdb_env_open().
 	 * @param[in] env An environment handle returned by #mdb_env_create()
 	 * @param[in] size The size in bytes
@@ -583,7 +583,7 @@ int  mdb_txn_renew(MDB_txn *txn);
 	 * a read-only transaction.
 	 * @param[in] txn A transaction handle returned by #mdb_txn_begin()
 	 * @param[in] name The name of the database to open. If only a single
-	 * 	database is needed in the enviroment, this value may be NULL.
+	 * 	database is needed in the environment, this value may be NULL.
 	 * @param[in] flags Special options for this database. This parameter
 	 * must be set to 0 or by bitwise OR'ing together one or more of the
 	 * values described here.
@@ -667,7 +667,7 @@ int  mdb_drop(MDB_txn *txn, MDB_dbi dbi, int del);
 	 *
 	 * The comparison function is called whenever it is necessary to compare a
 	 * key specified by the application with a key currently stored in the database.
-	 * If no comparison function is specified, and no speAGAINcial key flags were specified
+	 * If no comparison function is specified, and no special key flags were specified
 	 * with #mdb_open(), the keys are compared lexically, with shorter keys collating
 	 * before longer keys.
 	 * @warning This function must be called before any data access functions are used,
@@ -797,7 +797,7 @@ int  mdb_get(MDB_txn *txn, MDB_dbi dbi, MDB_val *key, MDB_val *data);
 	 * @return A non-zero error value on failure and 0 on success. Some possible
 	 * errors are:
 	 * <ul>
-	 *	<li>EACCESS - an attempt was made to write in a read-only transaction.
+	 *	<li>EACCES - an attempt was made to write in a read-only transaction.
 	 *	<li>EINVAL - an invalid parameter was specified.
 	 *	<li>ENOMEM - the database is full, see #mdb_env_set_mapsize().
 	 * </ul>
@@ -823,7 +823,7 @@ int  mdb_put(MDB_txn *txn, MDB_dbi dbi, MDB_val *key, MDB_val *data,
 	 * @return A non-zero error value on failure and 0 on success. Some possible
 	 * errors are:
 	 * <ul>
-	 *	<li>EACCESS - an attempt was made to write in a read-only transaction.
+	 *	<li>EACCES - an attempt was made to write in a read-only transaction.
 	 *	<li>EINVAL - an invalid parameter was specified.
 	 * </ul>
 	 */
-- 
1.7.4.2

