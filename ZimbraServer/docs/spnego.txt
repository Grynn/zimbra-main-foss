I. SPNEGO SSO
   The SPNEGO SSO feature allows Windows domain users to enter their Zimbra mailbox without 
   having to re-authenticate themselves to Zimbra by entering their Zimbra credentials.
    
   Microsoft's Active Directory/Kerberos implementation is the single authentication store.
   
   It is essential that a user must logon to a Windows 2000 domain, local logons will not work.
   
   Supported browsers:
     - Internet Explorer 6.0 or later
     - Firefox 3.0 or later
     
   
   A high level description of the Authentication Overview
   (see http://msdn.microsoft.com/en-us/library/ms995329.aspx for more information)
   
   - The logged-on user must have acquired Kerberos credentials from the domain.
   - The logged-on user then attempts to access Zimbra. 
   - Zimbra is configured to redirect the request to a resource URL under SPNEGO protection. 
   - The Zimbra server asks for authentication with Kerberos (by using SPNEGO). 
   - The client obtains a ticket for the requested service from the KDC and presents these credentials back to Zimbra server.
   - The Zimbra server extracts the user's credentials and authenticates the request and identifies the user.
   - The request is then redirected to Zimbra's preauth servlet with all required preauth parameters for the identified user.
   - The Zimbra preauth servlet verifies the preauth parameters and redirect the user into the Zimbra mail page.


II. Zimbra UI Flow

1. user login to Windows as a domain user or a local user

2. user browses to the regular Zimbra entry page, e.g. http://mail.company.com

3. a domain(e.g. zimbra.com) gets resolved by virtual host name (mail.company.com)

4. zimbraWebClientLoginURL on domain redirects user to a preauth jsp under a spnego protected webapp/URL.

5. spnego authentication happens (by jetty)

6. if spnego auth succeeds, goto 7, if failed goto step 13
   Windows local user will fail.
   Windows domain user will pass, in the rare case spnego auth can fail for a domain user,
   (e.g. jetty can't contact the KDC), the flow goes to step 13.

7. user is redirected to the Zimbra preauth servlet

8. Zimbra preauth happens and succeeds

9. user gets redirected to the Zimbra mail app, all is well.

10. user clicks on the "logout" button, and gets redirected to the zimbraWebClientLogOutURL 
    configured on the domain.

11. the logout URL points to the page UI, which has a "Launch" button

12. user clicks on "Launch", and gets redirected to the regular Zimbra entry page (goto step 2)
 
13. (spnego auth failed) user is redirected to the error URL, which we set to {regular-Zimbra_entry}/?igoreLoginURL=1
    e.g. http://mail.company.com/?igoreLoginURL=1

14. zimbraWebClientLoginURL is ignored because of the "?igoreLoginURL=1", and user sees the Zimbra user/pass page.

15. user enters his Zimbra user/pass to login, all is well.


III. Configuration
======================================
1. Create and Set Up the Keytab File
======================================

On the windows active domain controller:

(A) Create an Active Directory service account.
    This is the account you use to generate the keytab.
       
    - programs -> Administrative Tools -> Active Directory Users and Computers
    
    - right click on "Users" under the domain
    
    - new -> User 
    
    - enter HTTP/{zimbra mailbox server name} for the "User login name"
      e.g. HTTP/server1.spnego.local
      Note: this name is to go in the zimbraSpnegoAuthTargetName server attribute in LDAP
      
    - enter a short name for the "User loging name (pre-Windows 2000)"
      e.g. server1
      Note: this is the name you use for the {AD-user} in the setspn and ktpass commands (see below)
      
    - click on Next
    
    - enter and confirm the password (you may want to check "Password never expired") and click on Next
      e.g. ca$hc0w
      Note: this is the password you use for the {AD-user-password} in the ktpass command (see below)
    
    - click on "Finish" to create the user.   


(B) Add the Service Principal Names (SPN) directory property for an Active Directory service account. 

    setspn -A {target name for the http server} {AD-user}
    
    e.g.
    - list registered SPNs (there is none)
      C:\>setspn -L server1
      Registered ServicePrincipalNames for CN=server1,CN=Users,DC=spnego,DC=local:

    - add SPN for the service account
      C:\>setspn -A HTTP/server1.spnego.local server1
      Registering ServicePrincipalNames for CN=server1,CN=Users,DC=spnego,DC=local HTTP/server1.spnego.local
      Updated object

    - list registered SPNs (should see the one we just added)
      C:\>setspn -L server1
      Registered ServicePrincipalNames for CN=server1,CN=Users,DC=spnego,DC=local:
      HTTP/server1.spnego.local


(C) Create the keytab file
   
    ktpass -out {keytab-file-to-produce} -princ {principal-name-in-the-form-user@REALM} -mapUser {AD-user} -mapOp set -pass {AD-user-password} -crypto RC4-HMAC-NT -pType KRB5_NT_PRINCIPAL

    e.g.
    C:\>ktpass -out c:\Temp\spnego\jetty.keytab -princ HTTP/server1.spnego.local@SPNEGO.LOCAL -mapUser server1 -mapOp set -pass ca$hc0w -crypto RC4-HMAC-NT -pType KRB5_NT_PRINCIPAL
    Targeting domain controller: jj-dc.spnego.local
    Using legacy password setting method
    Successfully mapped HTTP/server1.spnego.local to server1.
    Key created.
    Output keytab to c:\Temp\spnego\jetty.keytab:
    Keytab version: 0x502
    keysize 75 HTTP/server1.spnego.local@SPNEGO.LOCAL ptype 1 (KRB5_NT_PRINCIPAL)
    vno 6 etype 0x17 (RC4-HMAC) keylength 16 (0xc383f6a25f1e195d5aef495c980c2bfe)
    
    The above creates jetty.keytab under c:\Temp\spnego
    
    
(D) Place the Keytab File    
    copy jetty.keytab created in step (3) to the zimbra server under /opt/zimbra/jetty/etc.
    
    Note: Do not rename it, the name(jetty.keytab) is referenced from various configuration 
          files setup by the Zimbra installer.


Repeat steps (A) to (D) for each zimbra server.


=====================
2. Configure Zimbra
=====================
- For production system, do 2.1, 2.2, 2.3.

- For dev system: do "ant spnego-deploy" under ZimbraServer.


2.1. Configure Domain
---------------------

(A) Setup preauth for the domain.
    - Generate a preauth key using zmprov gdpak
      e.g.
      zmprov gdpak domain.com
      preAuthKey: 4e2816f16c44fab20ecdee39fb850c3b0bb54d03f1d8e073aaea376a4f407f0c

    - Set the preauth key on the domain
      mprov md domain.com zimbraPreAuthKey 4e2816f16c44fab20ecdee39fb850c3b0bb54d03f1d8e073aaea376a4f407f0c
      
    - Modify /opt/zimbra/jetty/webapps/spnego/spnego_preauth.jsp with the preauth key.
      edit the spnego_preauth.jsp
      replace the text REPLACE-ME-WITH-THE-PREAUTH-KEY with the real preauth key.  


(B) Setup virtual host for the domain
    zmprov md {domain} +zimbraVirtualHostname {virtual-hostname-1} +zimbraVirtualHostname {virtual-hostname-2}
    
    virtual-hostname-* are the hostnames you can browse to for the Zimbra WEB UI.
    
    
(C) Setup login URL for the domain
    zmprov md {domain} zimbraWebClientLoginURL {public URL for the domain}/spnego/spnego_preauth.jsp
    
    
(D) Setup logout URL for the domain
    zmprov md {domain} zimbraWebClientLogoutURL {public URL for the domain}/?sso=1
    This is the URL to go to when user clicks on the :logout" button.


(E) Setup kerberos Realm for the domain
    zmprov md {domain} zimbraAuthKerberos5Realm {kerberos-realm}

    {kerberos-realm} should be the realm set in global config attribute zimbraSpnegoAuthRealm
    
    e.g. 
    zmprov md zimbra.com zimbraAuthKerberos5Realm SPNEGO.LOCAL


2.2. Configure Global Config
----------------------------

We support only one REALM/KDC per Zimbra installation.

Modify the following global config keys with zmprov mcf

zimbraSpnegoAuthAdminServer : address of the admin server for the realm

zimbraSpnegoAuthEnabled     : TRUE

zimbraSpnegoAuthErrorURL    : URL to redirect users to on spnego auth failure 
                              Setting it to "http://{server}:{port}/zimbra/?ignoreLoginURL=1"
                              will redirect user to the regular Zimbra login page, where 
                              zimbra user name and password are prompted.
                              
zimbraSpnegoAuthKDC         : address of the KDC for the realm

zimbraSpnegoAuthRealm       : the kerberos realm


2.3. Configure Servers
----------------------
On each zimbra server:
zimbraSpnegoAuthTargetName  : the name for the service user in 1. (A), e.g. HTTP/server1.spnego.local

zimbraSpnegoAuthPrincipal   : {zimbraSpnegoAuthTargetName}@{zimbraSpnegoAuthRealm}
  

===========================
3. Configure Your Browser
===========================
Firefox:
* browse to about:config and agree to the warnings
* search through to find the 'network' settings
** set network.negotiate-auth.delegation-uris to http://,https://
** set network.negotiate-auth.trusted-uris to http://,https://

IE:
* Tools -> Options -> Security -> Local Intranet -> Sites
** make sure everything is checked here
* Tools -> Options -> Security -> Local Intranet -> Sites -> Advanced
** add url to server (http:// and/or https://) making sure to use the hostname
* Tools -> Options -> Security -> Local Intranet -> Sites -> Advanced -> Close
* Tools -> Options -> Security -> Local Intranet -> Sites -> Ok
* Tools -> Options -> Advanced -> Security (in the checkbox list)
** locate and check 'Enable Integrated Windows Authentication'
* Tools -> Options -> Advanced -> Security -> Ok
* close IE then reopen and browse to your spengo protected resource


================
4. Test it out
================
- On a Windows box, loging to the domain as a domain user
  
  Your ticket as a domain user will be saved on the computer.
  Ths token will be picked up by the spnego aware browser and send in 
  the Authorization header to zimbra server.
  
- browse to the regualr WEB UI initial page:
  e.g. http://myserver:7070
  
  What should happen behind the scene:
  - a domain get resolved by the virtual host name setting
  
  - the request get redirected to the login URL on the domain
  
  - the login URL points to a spnego protected URL (/spnego/spnego_preauth.jsp)
  
  - spnego auth happens
  
  - if the spnego auth fails, user will be redirected to an error URL, 
    confogured in the global config key zimbraSpnegoAuthErrorURL.
    
  - if the spnego auth succeeds, zimbra preauth sequence will happen, 
    user will be redirected to the preauth servlet and then finally landed 
    on the mail app.
    


