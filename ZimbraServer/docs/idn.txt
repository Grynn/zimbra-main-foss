===============
1. What is IDN
===============

IDN stands for Internationalized Domain Names.

An IDN is an Internet domain name that contains non-ASCII characters. Such domain names could 
contain letters with diacritics, as required by many European languages, or characters from 
non-Latin scripts such as Arabic or Chinese.  However, the standard for domain names does not 
allow such characters, nor could such domain names be handled by the existing DNS and name 
resolver infrastructure.

http://www.icann.org/topics/idn.html defines Internationalized Domain Names in Applications (IDNA), 
in that non-ASCII domain names should be converted into standard ASCII domain names by applications 
while preserving the stability of the domain name systems.  IDNA specifies how this conversion is 
to be done. 

Per http://www.icann.org/topics/idn.html, the three RFCs: 3490, 3491, and 3492 together define the 
IDNA protocol/behavior.

The 3 RFCs boil down to the following summaries:
(1) Non-ASCII domain names should be converted to a standard ASCII-based form, aka, 
    ASCII Compatible Encoding(ACE) by applications before handing them to DNS and name 
    resolver systems.
  
(2) An IDNA-enabled application should be able to convert between the restricted-ASCII 
    and non-ASCII representations of a domain, using the ASCII form in cases where
    it is needed (such as for DNS lookup), but being able to present the more readable 
    non-ASCII form to users.
    
(3) Support for the two conversion functions:
    A. ToASCII: 
           Used before sending an IDN to something that expects ASCII names (such as a resolver) or 
           writing an IDN into a place that expects ASCII names (such as a DNS master file).
           
    B. ToUnicode:
           Used when displaying names to users.


For example:
           Unicode name: my.中文.cn
    Equivalent ACE name: my.xn--fiq228c.cn
           

links:
http://www.icann.org/topics/idn.html
http://en.wikipedia.org/wiki/Internationalized_domain_name


================================
2. IDN Support in Zimbra Server
================================

http://bugzilla.zimbra.com/show_bug.cgi?id=14225

2.1 Support for ToASCII and ToUnicode Conversions
        Adapted third party GNU IDN Java lib (http://www.gnu.org/software/libidn) for the two
        conversion functions.
          
          
2.2 Stored in LDAP
        IDN domain names and email addresses are converted to ACE and stored in LDAP in ACE.  
        For the following reasons:
        1. Each domain label are stored in the dc attribute in LDAP.  dc is of syntax IA5String, 
           which is "ASCII character set 7-bit" and does not allow non-ASCII characters.
        
        2. ACE in domain names and email addresses are the real routable names, they need to be 
           seen by components like Postfix when accessed from LDAP.
           
        3. For consistency, IDNs are converted to ACE and stored in ACE across the board for all 
           attributes that contain domain names or email addresses.   


2.3 Support in SOAP Request/Response
        1. SOAP Request
              Both Unicode names and ACE names will be honored by all our SOAP requests that 
              identify accounts, calendar resources, distribution lists, aliases, and domains by 
              name.  (Note, this is supported in LdapProvisioning via the Provisioning interface.  
              The names be opaque to callers of Provisioning.)
              
              e.g. <domain by="name">my.中文.cn</domain> equals to
                   <domain by="name">my.xn--fiq228c.cn</domain>
            
                   <account by="name">user1@my.中文.cn</domain> equals to
                   <account by="name">user1@my.xn--fiq228c.cn</domain>
                   
        2. SOAP Response
           (A) name attribute and element in all SOAP responses are always returned in unicode
               e.g. 
                    (a) <GetDomainResponse xmlns="urn:zimbraAdmin">
                            <domain id="..." name="my.中文.cn">
                            ...
                        </GetDomainResponse>
                        
                    (b) <GetAccountResponse xmlns="urn:zimbraAdmin">
                            <account id="..." name="user1@my.中文.cn">
                            ...
                        </GetAccountResponse>  
                    
                    (c) <GetInfoResponse xmlns="urn:zimbraAccount">
                            <id>...</id>
                            <name>user1@my.中文.cn</name>
                            ...
                       </GetInfoResponse>    
           
           (B) attributes contain IDN domain names or email addresses are returned in:
               - ACE in attribute element content  (this is the actual value stored in LDAP)
               - unicode in the utf8="" attribute of attribute element  
                   
               The list of LDAP attributes for which server will return utf8 are those attributes that are either:
               - of type email or emailp, or
               - has idn flag (in zimbra-attrs.xml)
   
               e.g.
                   (a) <GetDomainResponse xmlns="urn:zimbraAdmin">
                           <domain id="0eef5297-b212-4990-aad0-79e30825bf83" name="my.中文.cn">
                               <a n="o">my.xn--fiq228c.cn domain</a>                             <=== not an IDN attribute
                               <a n="objectClass">dcObject</a>
                               <a n="objectClass">organization</a>
                               <a n="objectClass">zimbraDomain</a>
                               <a n="zimbraDomainName" utf8="my.中文.cn">my.xn--fiq228c.cn</a>    <=== an IDN attribute
                               <a n="zimbraId">0eef5297-b212-4990-aad0-79e30825bf83</a>
                               <a n="zimbraDomainType">local</a>
                               <a n="dc">my</a>
                               <a n="zimbraMailStatus">enabled</a>
                               <a n="zimbraDomainStatus">active</a>
                           </domain>
                       </GetDomainResponse>
                   
                   (b) <GetAccountResponse xmlns="urn:zimbraAdmin">
                           <account id="a019a48a-87d1-4ae7-a97b-2a1411da0616" name="user1@my.中文.cn">
                               <a n="zimbraPrefGalAutoCompleteEnabled">FALSE</a>
                               ...
                               <a n="mail" utf8="user1@my.中文.cn">user1@my.xn--fiq228c.cn</a>                    <=== an IDN attribute
                               <a n="mail" utf8="alias-of-user1@my.中文.cn">alias-of-user1@my.xn--fiq228c.cn</a>  <=== an IDN attribute
                               <a n="zimbraPrefOutOfOfficeDirectAddress" utf8="ooo@yahoo.com">ooo@yahoo.com</a>  <=== an IDN attribute
                           </account>
                       </GetAccountResponse>
                       
                   (c) <GetConfigResponse xmlns="urn:zimbraAdmin">
                           <a utf8="mydomain.local" n="zimbraDefaultDomainName">mydomain.local</a>               <=== an IDN attribute
                       </GetConfigResponse>
                   
                   (d) <GetConfigResponse xmlns="urn:zimbraAdmin">
                           <a n="zimbraDefaultDomainName" utf8="my.中文.cn">my.xn--fiq228c.cn</a>                 <=== an IDN attribute
                       </GetConfigResponse>
     
     
2.4 LDAP Search Filters 
    TODO
    

===================  
3. Client Behavior
===================

In Web client, admin console, and zmprov, we need to support:
    - Input: all email addresses and/or domain names can be entered and recognized
             in both unicode or ACE(ASCII Compatible Encoding).
    
    - Output: all email addresses and/or domain names should be displayed in unicode.

3.1 Web Client
    http://bugzilla.zimbra.com/show_bug.cgi?id=20428

3.2 Admin Console

3.3 zmprov


 