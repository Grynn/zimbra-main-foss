#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007, 2008 Zimbra, Inc.
# 
# The contents of this file are subject to the Yahoo! Public License
# Version 1.0 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# ***** END LICENSE BLOCK *****
# 



if [ x`whoami` != "xzimbra" ]; then
  echo "$0 must be run as user zimbra"
  exit 1
fi

source `dirname $0`/zmshutil || exit 1
zmsetvars \
  zimbra_home \
  zimbra_server_hostname \
  zimbra_log_directory \
  zimbra_tmp_directory \
  zimbra_java_home \
  mailboxd_directory 
sasl_conf_directory=${zimbra_home}/cyrus-sasl/etc
if [ x"${mailboxd_directory}" = "${zimbra_home}/tomcat" ]; then
  mailboxd_server=tomcat
  mailboxd_conf_directory=${mailboxd_directory}/conf
else
  mailboxd_server=jetty
  mailboxd_conf_directory=${mailboxd_directory}/etc
fi
jetty_web_xml=${zimbra_home}/jetty/etc

if [ $# -gt 1 ]; then
    echo "Usage: $0 [mixed|both|http|https|redirect|help]"
    exit 1
fi
  
case "$1" in
  mixed|both|http|https|redirect)
    MODE=$1
    ;;
  help|--help|-help)
    echo "Usage: $0 [mixed|both|http|https|redirect]"
    exit 0
    ;;
  '')
    ;;
  *)
    echo "Usage: $0 [mixed|both|http|https|redirect|help]"
    exit 1
    ;;
esac

export JAVA_HOME=${zimbra_java_home}

if [ "x${zimbra_tmp_directory}" = "x" ]; then
  zimbra_tmp_directory=$zimbra_home/data/tmp
fi

if [ ! -d ${zimbra_tmp_directory} ]; then
  mkdir -p ${zimbra_tmp_directory}
fi

if [ "x$zimbra_server_hostname" = "x" ]; then
  echo "ERROR: Unable to determine zmhostname"
  exit 1;
fi

${zimbra_home}/bin/zmprov -l gs ${zimbra_server_hostname} > /dev/null 2>&1
if [ $? != 0 ]; then
  echo "ERROR: problem reading config from ldap. Make sure ldap is running."
  exit 1
fi

if [ "x$MODE" = "x" ]; then
	MODE=`${zimbra_home}/bin/zmprov -l gs ${zimbra_server_hostname} 2> /dev/null | grep zimbraMailMode | sed -e 's/zimbraMailMode: //'`

	if [ "x$MODE" = "x" ]; then
		MODE="http"
	fi
else
	shift
fi
if [ "x$DEBUG" = "x" ]; then
	DEBUG=`${zimbra_home}/bin/zmprov -l gcf zimbraHttpDebugHandlerEnabled | sed -e 's/zimbraHttpDebugHandlerEnabled: //' | tr A-Z a-z`

	if [ "x$DEBUG" = "x" ]; then
		DEBUG="false"
	fi
else
	shift
fi

echo "Setting tls mode to $MODE"

updateTomcatConfig() {

	if [ $MODE = "http" ]; then
		sed -e 's/\(.*HTTPSBEGIN\).*/\1/' -e 's/.*\(HTTPSEND.*\)/\1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			${mailboxd_conf_directory}/server.xml > \
			${zimbra_tmp_directory}/server.xml.$$
	else
		if [ $MODE = "https" ]; then
			sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
				-e 's/\(.*HTTPBEGIN\).*/\1/' -e 's/.*\(HTTPEND.*\)/\1/' \
				${mailboxd_conf_directory}/server.xml > \
				${zimbra_tmp_directory}/server.xml.$$
		else
			# MIXED - enable both
			sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
				-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
				${mailboxd_conf_directory}/server.xml > \
				${zimbra_tmp_directory}/server.xml.$$
		fi
	fi
	if [ -s ${zimbra_tmp_directory}/server.xml.$$ ]; then
    echo "Updating ${mailboxd_conf_directory}/server.xml"
		mv -f ${zimbra_tmp_directory}/server.xml.$$ \
      ${mailboxd_conf_directory}/server.xml
	fi
	sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>$MODE<\/env-entry-value><!-- PROTOCOL MODE -->/" \
		${mailboxd_directory}/webapps/zimbra/WEB-INF/web.xml > ${zimbra_tmp_directory}/web.xml.$$
  if [ -s ${zimbra_tmp_directory}/web.xml.$$ ]; then
    echo "Updating ${mailboxd_directory}/webapps/zimbra/WEB-INF/web.xml"
	  mv -f ${zimbra_tmp_directory}/web.xml.$$ ${mailboxd_directory}/webapps/zimbra/WEB-INF/web.xml
  fi
	
}

updateJettyConfig() {
	if [ $MODE = "http" ]; then
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*HTTPSBEGIN\).*/\1/' -e 's/.*\(HTTPSEND.*\)/\1/' \
			  -e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${mailboxd_conf_directory}/service.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbraAdmin.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi


	elif [ $MODE = "https" ]; then
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			  -e 's/\(.*HTTPBEGIN\).*/\1/' -e 's/.*\(HTTPEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${mailboxd_conf_directory}/service.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbraAdmin.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi


	elif [ $MODE = "redirect" ]; then
		# redirect - enable both
		# Then enable the redirect block in web.xml
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			  -e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${mailboxd_conf_directory}/service.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1 -->/' -e 's/.*\(REDIRECTEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1 -->/' -e 's/.*\(REDIRECTEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbraAdmin.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1 -->/' -e 's/.*\(REDIRECTEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

	else
		# MIXED - enable both
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			  -e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${mailboxd_conf_directory}/service.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi

    origfile=${jetty_web_xml}/zimbraAdmin.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
		  sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi
	fi

	if [ $MODE = "redirect" ]; then
    origfile=${mailboxd_conf_directory}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating PROTOCOL MODE in ${origfile}..."
		  sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>https<\/env-entry-value><!-- PROTOCOL MODE -->/" \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi
  else
    origfile=${mailboxd_conf_directory}/zimbra.web.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating PROTOCOL MODE in ${origfile}..."
		  sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>$MODE<\/env-entry-value><!-- PROTOCOL MODE -->/" \
			  ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi
	fi

	if [ x"$DEBUG" = "xtrue" ]; then
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
	    sed -e 's/\(.*DEBUGBEGIN\).*/\1 -->/' -e 's/.*\(DEBUGEND.*\)/<!-- \1/' \
		    ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi
  else 
    origfile=${mailboxd_conf_directory}/jetty.xml.in
    tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
    if [ $? = 0 -a -s "${tempfile}" ]; then
      echo -n "Updating ${origfile}..."
	    sed -e 's/\(.*DEBUGBEGIN\).*/\1/' -e 's/.*\(DEBUGEND.*\)/\1/' \
		    ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
      if [ $? = 0 ]; then
        echo "done."
      else 
        echo "failed."
        exit 1
      fi
    else
      echo "Couldn't create tempfile for ${origfile}"
      exit 1
    fi
  fi

  echo -n "Rewriting config files for webxml and mailboxd..."
  ${zimbra_home}/libexec/zmmtaconfig webxml mailbox  > /dev/null 2>&1
  if [ $? = 0 ]; then
    echo "done."
  else
    echo "failed."
    exit 1
  fi
}

updateSASLConfig() {
	if [ $MODE = "http" ]; then
		if [ -f ${sasl_conf_directory}/saslauthd.conf.in ]; then
      origfile=${sasl_conf_directory}/saslauthd.conf.in
      tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
      if [ $? = 0 -a -s "${tempfile}" ]; then
        echo -n "Updating ${origfile}..."
			  sed -e 's/^zimbra_url: https:/zimbra_url: http:/' \
			    ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
        if [ $? = 0 ]; then
          echo "done."
        else 
          echo "failed."
          exit 1
        fi
      else
        echo "Couldn't create tempfile for ${origfile}"
        exit 1
      fi
		fi
	else
		if [ -f ${sasl_conf_directory}/saslauthd.conf.in ]; then
      origfile=${sasl_conf_directory}/saslauthd.conf.in
      tempfile=$(mktemp ${origfile}.XXXXXX) && cp -f ${origfile} ${tempfile}
      if [ $? = 0 -a -s "${tempfile}" ]; then
        echo -n "Updating ${origfile}..."
			  sed -e 's/^zimbra_url: http:/zimbra_url: https:/' \
			    ${origfile} > ${tempfile} && mv -f ${tempfile} ${origfile}
        if [ $? = 0 ]; then
          echo "done."
        else 
          echo "failed."
          exit 1
        fi
      else
        echo "Couldn't create tempfile for ${origfile}"
        exit 1
      fi
		fi
	fi
  echo -n "Rewriting config files for cyrus-sasl..."
  ${zimbra_home}/libexec/zmmtaconfig sasl > /dev/null 2>&1
  if [ $? = 0 ]; then
    echo "done."
  else
    echo "failed."
    exit 1
  fi
}

updateLdap() {
  echo -n "Setting ldap config zimbraMailMode $MODE for ${zimbra_server_hostname}..."
	${zimbra_home}/bin/zmprov -l ms ${zimbra_server_hostname} zimbraMailMode $MODE > /dev/null 2>&1
  if [ $? = 0 ]; then
    echo "done."
  else 
    echo "failed."
    exit 1
  fi
}

if [ x"${mailboxd_server}" = "xtomcat" ]; then
  updateTomcatConfig
else
  updateJettyConfig
fi
updateSASLConfig
updateLdap
