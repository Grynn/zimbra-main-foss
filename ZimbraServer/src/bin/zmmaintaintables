#!/usr/bin/perl

#use strict;

use strict;

use lib "/opt/liquid/liquidmon/lib/liquidpm";
use lib "/opt/liquid/liquidmon/lib/liquidpm/SOAP";
use lib "/opt/liquid/liquidmon/lib";

use liquidlog;

use Getopt::Std;

use POSIX ":sys_wait_h";
use LWP::UserAgent;

use XmlElement;
use XmlDoc;
use Soap;

use Time::Local;

my $ACCTNS = "urn:liquidAccount";
my $MAILNS = "urn:liquidMail";
my $ADMINNS = "urn:liquidAdmin";
my $SOAP = $Soap::Soap12;

my $authToken;
my $START;
my $END;
my $PERIOD;

our %GlobalOpts;

sub usage { exit 1; }

sub run_maint_command {

	my $h = "localhost";

	my $url = "https://$h:7071/service/admin/soap/";

	my $context = $SOAP->liquidContext($authToken, "");

	my $d = new XmlDoc;
	$d->start('MaintainTablesRequest', $ADMINNS);
	$d->end();

	my $serverResponse = $SOAP->invoke($url, $d->root(), $context);

	print $serverResponse->to_string("pretty"),"\n";

}

sub get_auth_token {
	my $host = "localhost";
	my $user = "liquid";
	my $pass = `zmlocalconfig -s -m nokey liquid_ldap_password`;
	chomp $pass;

	# print "Authenticating to $host as $user/$pass\n";

	my $url = "https://$host:7071/service/admin/soap/";

	my $d = new XmlDoc;
	$d->start('AuthRequest', $ADMINNS);
	$d->add('name', undef, { by => "name"}, "$user");
	$d->add('password', undef, undef, "$pass");
	$d->end();

	my $authResponse;
	eval {
		$authResponse = $SOAP->invoke($url, $d->root());
	};

	if (!$authResponse) {return undef;}
	my $authToken = $authResponse->find_child('authToken')->content;

	# print "authToken($authToken)\n";

	return $authToken;

}

$authToken = get_auth_token();

if (!defined ($authToken)) {
	print STDERR "AUTH FAILED\n\n";
	exit (1);
}

run_maint_command();
