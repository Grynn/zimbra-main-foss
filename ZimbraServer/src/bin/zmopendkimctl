#!/bin/sh
#
# Copyright (c) 2010, 2011, The OpenDKIM Project.  All rights reserved.
#
# $Id: opendkim.init,v 1.6 2010/10/25 17:13:47 cm-msk Exp $
#
### BEGIN INIT INFO
# Provides:          opendkim
# Required-Start:    $syslog $time $local_fs $remote_fs $named $network
# Required-Stop:     $syslog $time $local_fs $remote_fs $named
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: OpenDKIM Milter
# Description:       The OpenDKIM milter for signing and verifying email
#                    messages using the DomainKeys Identified Mail protocol
### END INIT INFO
#
# chkconfig: 345 20 80
# description: OpenDKIM milter for signing and verifying email
# processname: opendkim
#
# This script should run successfully on any LSB-compliant system. It will
# attempt to fall back to RedHatisms if LSB isn't available, or to
# commonly-available utilities if it's not even RedHat.

NAME=opendkim
PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON=/opt/zimbra/opendkim/sbin/opendkim
PIDFILE=/opt/zimbra/log/opendkim.pid
CONFIG=/opt/zimbra/conf/$NAME.conf
USER=zimbra

# Implement our own status function per LSB specs. This will be used on
# non-RedHat systems.

log_success_msg () {
    echo "done."
}

log_failure_msg () {
    echo "failed."
}

od_status() {
	od_getpid
	pid=$?
	if [ $pid -eq 0 ]; then
		if [ -f $PIDFILE ]; then
			echo "$NAME dead but pid file exists"
			return 1
		elif [ -d /var/lock/subsys -a -f /var/lock/subsys/$NAME ]; then
			echo "$NAME dead but subsys locked"
			return 2
		else
			echo "$NAME is stopped"
			return 3
		fi
	fi
	echo "$NAME (pid $pid) is running..."
	return 0
}

od_getpid() {
    PIDFILE=$(grep -i '^pidfile' $CONFIG | head -n 1 | awk '{print $2}')
	if [ ! -f "$PIDFILE" ]; then
		return 0
	fi
	PID=$(cat "$PIDFILE")
	return $PID
}

od_killproc() {
	[ -z "$1" ] && return 1
	if [ -n "$2" ]; then 
		signal=$2
	else
		signal="TERM"
	fi
	od_getpid
	pid=$?
	if [ $pid -ne 0 ]; then
		kill -"$signal" $pid
		return 0
	fi
	return 1
}

if [ ! -x "$DAEMON" ]; then
	exit 5
fi

if [ ! -f "$CONFIG" ]; then
	log_failure_msg "$CONFIG not found"
	exit 6
fi

ARGS="-u $USER $ARGS"

od_start() {
	echo -n "Starting OpenDKIM..."
	$DAEMON -x $CONFIG $ARGS
	if [ $? -eq 0 ]; then
		log_success_msg $NAME
		if [ -d /var/lock/subsys ]; then
			touch /var/lock/subsys/$NAME
		fi
	else
		log_failure_msg $NAME
	fi
	echo
}

od_stop() {
	echo -n "Stopping OpenDKIM..."
	od_killproc $DAEMON
	if [ $? -eq 0 ]; then
		log_success_msg $NAME
		if [ -d /var/lock/subsys ]; then
			rm -f /var/lock/subsys/$NAME
		fi
	else
		log_failure_msg $NAME
	fi
	echo
}

od_reload() {
	echo -n "Reloading OpenDKIM Milter configuration: "
	od_killproc $DAEMON SIGUSR1
	if [ $? -eq 0 ]; then
		log_success_msg $NAME
	else
		log_failure_msg $NAME
	fi
	echo
}

case "$1" in
  start)
  	od_start
	;;
	
  stop)
  	od_stop
	;;
	
  restart|force-reload)
  	od_stop
	od_start
	;;
	
  reload)
  	od_reload
	;;
	
  status)
	od_status $NAME
	;;
esac
