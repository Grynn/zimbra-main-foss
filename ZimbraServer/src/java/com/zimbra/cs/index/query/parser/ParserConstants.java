/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package com.zimbra.cs.index.query.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 3;
  /** RegularExpression Id. */
  int OR = 4;
  /** RegularExpression Id. */
  int NOT = 5;
  /** RegularExpression Id. */
  int LPAREN = 6;
  /** RegularExpression Id. */
  int RPAREN = 7;
  /** RegularExpression Id. */
  int PLUS = 8;
  /** RegularExpression Id. */
  int MINUS = 9;
  /** RegularExpression Id. */
  int TERM = 10;
  /** RegularExpression Id. */
  int _TERM_START_CHAR = 11;
  /** RegularExpression Id. */
  int _TERM_CHAR = 12;
  /** RegularExpression Id. */
  int QUOTED_TERM = 13;
  /** RegularExpression Id. */
  int _ESCAPED_QUOTE = 14;
  /** RegularExpression Id. */
  int BRACED_TERM = 15;
  /** RegularExpression Id. */
  int CONTENT = 16;
  /** RegularExpression Id. */
  int SUBJECT = 17;
  /** RegularExpression Id. */
  int MSGID = 18;
  /** RegularExpression Id. */
  int ENVTO = 19;
  /** RegularExpression Id. */
  int ENVFROM = 20;
  /** RegularExpression Id. */
  int CONTACT = 21;
  /** RegularExpression Id. */
  int TO = 22;
  /** RegularExpression Id. */
  int FROM = 23;
  /** RegularExpression Id. */
  int CC = 24;
  /** RegularExpression Id. */
  int TOFROM = 25;
  /** RegularExpression Id. */
  int TOCC = 26;
  /** RegularExpression Id. */
  int FROMCC = 27;
  /** RegularExpression Id. */
  int TOFROMCC = 28;
  /** RegularExpression Id. */
  int IN = 29;
  /** RegularExpression Id. */
  int UNDER = 30;
  /** RegularExpression Id. */
  int INID = 31;
  /** RegularExpression Id. */
  int UNDERID = 32;
  /** RegularExpression Id. */
  int HAS = 33;
  /** RegularExpression Id. */
  int FILENAME = 34;
  /** RegularExpression Id. */
  int TYPE = 35;
  /** RegularExpression Id. */
  int ATTACHMENT = 36;
  /** RegularExpression Id. */
  int IS = 37;
  /** RegularExpression Id. */
  int DATE = 38;
  /** RegularExpression Id. */
  int DAY = 39;
  /** RegularExpression Id. */
  int WEEK = 40;
  /** RegularExpression Id. */
  int MONTH = 41;
  /** RegularExpression Id. */
  int YEAR = 42;
  /** RegularExpression Id. */
  int AFTER = 43;
  /** RegularExpression Id. */
  int BEFORE = 44;
  /** RegularExpression Id. */
  int SIZE = 45;
  /** RegularExpression Id. */
  int BIGGER = 46;
  /** RegularExpression Id. */
  int SMALLER = 47;
  /** RegularExpression Id. */
  int TAG = 48;
  /** RegularExpression Id. */
  int PRIORITY = 49;
  /** RegularExpression Id. */
  int MESSAGE = 50;
  /** RegularExpression Id. */
  int MY = 51;
  /** RegularExpression Id. */
  int MODSEQ = 52;
  /** RegularExpression Id. */
  int CONV = 53;
  /** RegularExpression Id. */
  int CONV_COUNT = 54;
  /** RegularExpression Id. */
  int CONV_MINM = 55;
  /** RegularExpression Id. */
  int CONV_MAXM = 56;
  /** RegularExpression Id. */
  int CONV_START = 57;
  /** RegularExpression Id. */
  int CONV_END = 58;
  /** RegularExpression Id. */
  int APPT_START = 59;
  /** RegularExpression Id. */
  int APPT_END = 60;
  /** RegularExpression Id. */
  int AUTHOR = 61;
  /** RegularExpression Id. */
  int TITLE = 62;
  /** RegularExpression Id. */
  int KEYWORDS = 63;
  /** RegularExpression Id. */
  int COMPANY = 64;
  /** RegularExpression Id. */
  int METADATA = 65;
  /** RegularExpression Id. */
  int ITEM = 66;
  /** RegularExpression Id. */
  int SORTBY = 67;
  /** RegularExpression Id. */
  int SORT = 68;
  /** RegularExpression Id. */
  int FIELD = 69;
  /** RegularExpression Id. */
  int _FIELD1 = 70;
  /** RegularExpression Id. */
  int _FIELD2 = 71;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "<AND>",
    "<OR>",
    "<NOT>",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "<TERM>",
    "<_TERM_START_CHAR>",
    "<_TERM_CHAR>",
    "<QUOTED_TERM>",
    "\"\\\\\\\"\"",
    "<BRACED_TERM>",
    "\"content:\"",
    "\"subject:\"",
    "\"msgid:\"",
    "\"envto:\"",
    "\"envfrom:\"",
    "\"contact:\"",
    "\"to:\"",
    "\"from:\"",
    "\"cc:\"",
    "\"tofrom:\"",
    "\"tocc:\"",
    "\"fromcc:\"",
    "\"tofromcc:\"",
    "\"in:\"",
    "\"under:\"",
    "\"inid:\"",
    "\"underid:\"",
    "\"has:\"",
    "\"filename:\"",
    "\"type:\"",
    "\"attachment:\"",
    "\"is:\"",
    "\"date:\"",
    "\"day:\"",
    "\"week:\"",
    "\"month:\"",
    "\"year:\"",
    "\"after:\"",
    "\"before:\"",
    "\"size:\"",
    "<BIGGER>",
    "\"smaller:\"",
    "\"tag:\"",
    "\"priority:\"",
    "\"message:\"",
    "\"my:\"",
    "\"modseq:\"",
    "\"conv:\"",
    "\"conv-count:\"",
    "\"conv-minm:\"",
    "\"conv-maxm:\"",
    "\"conv-start:\"",
    "\"conv-end:\"",
    "\"appt-start:\"",
    "\"appt-end:\"",
    "\"author:\"",
    "\"title:\"",
    "\"keywords:\"",
    "\"company:\"",
    "\"metadata:\"",
    "\"item:\"",
    "\"sortby:\"",
    "\"sort:\"",
    "<FIELD>",
    "<_FIELD1>",
    "<_FIELD2>",
    "\"\\r\"",
  };

}
