/*
 * ***** BEGIN LICENSE BLOCK *****
 * Zimbra Collaboration Suite Server
 * Copyright (C) 2010 Zimbra, Inc.
 *
 * The contents of this file are subject to the Zimbra Public License
 * Version 1.3 ("License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://www.zimbra.com/license.
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * ***** END LICENSE BLOCK *****
 */
package com.zimbra.cs.index.query.parser;

import java.io.PrintStream;
import java.io.PrintWriter;

/**
 * Wrapper of {@link ParseException} generated by JavaCC. We want to keep
 * {@link ParserException} in package private.
 *
 * @author ysasaki
 */
public final class QueryParserException extends Exception {
    private final ParseException ex;

    QueryParserException(ParseException e) {
        ex = e;
    }

    QueryParserException(String message, Token token) {
        ex = new ParseException(message);
        ex.currentToken = token;
    }

    public QueryParserException(String message) {
        ex = new ParseException(message);
    }

    public int getErrorOffset() {
        return ex.currentToken != null ? ex.currentToken.beginColumn : -1;
    }

    void setToken(Token token) {
        ex.currentToken = token;
    }

    public String getText() {
        return ex.currentToken != null ? ex.currentToken.image : null;
    }

    @Override
    public String getMessage() {
        return ex.getMessage();
    }

    @Override
    public Throwable getCause() {
        return ex.getCause();
    }

    @Override
    public String getLocalizedMessage() {
        return ex.getLocalizedMessage();
    }

    @Override
    public String toString() {
        return ex.toString();
    }

    @Override
    public StackTraceElement[] getStackTrace() {
        return ex.getStackTrace();
    }

    @Override
    public void printStackTrace() {
        ex.printStackTrace();
    }

    @Override
    public void printStackTrace(PrintStream stream) {
        ex.printStackTrace(stream);
    }

    @Override
    public void printStackTrace(PrintWriter writer) {
        ex.printStackTrace(writer);
    }

}
