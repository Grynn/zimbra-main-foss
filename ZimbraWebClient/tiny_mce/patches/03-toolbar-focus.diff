# HG changeset patch
# User Dan Villiom Podlaski Christiansen <dan@cabo.dk>
# Date 1393341635 -3600
#      Tue Feb 25 16:20:35 2014 +0100
# Node ID f6363bfcf9dbd217b5eff502c837ec8f1d9d9234
# Parent  d6c1eff53c2a31be94715ff6ba17aac16a511a32
Suppress tab wraparound for the toolbar.

diff --git a/js/tinymce/classes/ui/KeyboardNavigation.js b/js/tinymce/classes/ui/KeyboardNavigation.js
--- a/js/tinymce/classes/ui/KeyboardNavigation.js
+++ b/js/tinymce/classes/ui/KeyboardNavigation.js
@@ -31,11 +31,13 @@ define("tinymce/ui/KeyboardNavigation", 
 	 * @setting {Function} onAction (optional) the action handler to call when the user activates an item.
 	 * @setting {Boolean} enableLeftRight (optional, default) when true, the up/down arrows move through items.
 	 * @setting {Boolean} enableUpDown (optional) when true, the up/down arrows move through items.
+	 * @setting {Boolean} allowTabEscape (optional) when true, tabbing doesn't stay within the items
 	 * Note for both up/down and left/right explicitly set both enableLeftRight and enableUpDown to true.
 	 */
 	return function(settings) {
 		var root = settings.root, enableUpDown = settings.enableUpDown !== false;
 		var enableLeftRight = settings.enableLeftRight !== false;
+		var allowTabEscape = settings.allowTabEscape;
 		var items = settings.items, focussedId;
 
 		/**
@@ -165,8 +167,10 @@ define("tinymce/ui/KeyboardNavigation", 
 		 *
 		 * @method moveFocus
 		 * @param {Number} dir Direction for move -1 or 1.
+		 * @param {Boolean} nowrap Whether to allow wrapping.
+		 * @return {Boolean} True on success.
 		 */
-		function moveFocus(dir) {
+		function moveFocus(dir, nowrap) {
 			var idx = -1, focusElm, i;
 			var visibleItems = [];
 
@@ -203,7 +207,10 @@ define("tinymce/ui/KeyboardNavigation", 
 			}
 
 			idx += dir;
-			if (idx < 0) {
+
+			if (nowrap && (idx < 0 || idx >= visibleItems.length)) {
+				return false;
+			} else if (idx < 0) {
 				idx = visibleItems.length - 1;
 			} else if (idx >= visibleItems.length) {
 				idx = 0;
@@ -216,6 +223,8 @@ define("tinymce/ui/KeyboardNavigation", 
 			if (settings.actOnFocus) {
 				action();
 			}
+
+			return true;
 		}
 
 		/**
@@ -296,13 +305,10 @@ define("tinymce/ui/KeyboardNavigation", 
 					break;
 
 				case DOM_VK_TAB:
-					preventDefault = true;
-
-					if (e.shiftKey) {
-						moveFocus(-1);
-					} else {
-						moveFocus(1);
-					}
+					// allow tab presses to propagate to the next listener
+					// rather than wrapping
+					preventDefault = moveFocus(e.shiftKey ? -1 : 1,
+					                           allowTabEscape);
 					break;
 
 				case DOM_VK_ESCAPE:
@@ -335,4 +341,4 @@ define("tinymce/ui/KeyboardNavigation", 
 			cancel: cancel
 		};
 	};
-});
\ No newline at end of file
+});
diff --git a/js/tinymce/classes/ui/Toolbar.js b/js/tinymce/classes/ui/Toolbar.js
--- a/js/tinymce/classes/ui/Toolbar.js
+++ b/js/tinymce/classes/ui/Toolbar.js
@@ -51,10 +51,11 @@ define("tinymce/ui/Toolbar", [
 
 			self.keyNav = new KeyboardNavigation({
 				root: self,
+				allowTabEscape: true,
 				enableLeftRight: true
 			});
 
 			return self._super();
 		}
 	});
-});
\ No newline at end of file
+});
