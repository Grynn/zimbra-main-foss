<%@ page buffer="8kb" autoFlush="true" %>
<%@ page pageEncoding="UTF-8" contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="zm" uri="com.zimbra.zm" %>
<%@ taglib prefix="app" uri="com.zimbra.htmlclient" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="fmt" uri="com.zimbra.i18n" %>

<app:handleError>
    <zm:getMailbox var="mailbox"/>
    <c:choose>
    <c:when test="${not empty mailbox.prefs.locale}">
        <fmt:setLocale value='${mailbox.prefs.locale}' scope='request' />
    </c:when>
    <c:otherwise>
        <fmt:setLocale value='${pageContext.request.locale}' scope='request' />
    </c:otherwise>
    </c:choose>
    <fmt:setBundle basename="/messages/ZhMsg" scope='request' />
    <fmt:message var="title" key="compose"/>
    <zm:composeUploader var="uploader"/>
    <c:set var="compose" value="${uploader.compose}"/>
    <c:set var="composeformat" value="${mailbox.prefs.composeFormat}" />
    <c:if test="${mailbox.prefs.forwardReplyInOriginalFormat && !empty param.rf && (param.rf eq 'html' || param.rf eq 'text')}">
            <c:set var="composeformat" value="${param.rf}"/>        
    </c:if>
    <c:set var="isHtml" value="${composeformat eq 'html'}"/>
</app:handleError>

<app:handleError>
    <c:choose>
        <c:when test="${!empty param.id or !empty compose.draftId or !empty requestScope.draftid}">
            <c:choose>
                <c:when test="${!empty compose.draftId or !empty requestScope.draftid}">
                    <zm:getMessage var="message" id="${empty requestScope.draftid ? compose.draftId : requestScope.draftid}" wanthtml="${(isHtml ? true : false)}"/>
                </c:when>
                <c:otherwise>
                    <zm:getMessage var="message" id="${param.id}" part="${param.part}" wanthtml="${(isHtml ? true : false)}"/>
                </c:otherwise>
            </c:choose>
        </c:when>
        <c:otherwise>
            <c:set var="message" value="${null}"/>
        </c:otherwise>
    </c:choose>

    <c:choose>
        <c:when test="${empty compose }">
            <zm:messageCompose var="compose" message="${message}" action="${message.isDraft ? 'draft' : param.op}"/>
        </c:when>
        <c:when test="${uploader.isUpload and !empty message}">
            <c:if test="${!requestScope.uploadError}">
                <zm:fixupMessageCompose message="${message}" compose="${compose}" newattachments="${uploader.compose.hasFileItems or !empty uploader.compose.uploadedAttachment}"/>
            </c:if>
        </c:when>
    </c:choose>
    <c:if test="${!empty param.voiceid}">
        <zm:voiceMailCompose compose="${compose}" voiceid="${param.voiceid}" operation="${param.vmop}"/>
    </c:if>

    <c:set var="priority" value=""/>
    <c:if test="${not empty message and message.isDraft}">
        <c:choose>
            <c:when test="${message.isHighPriority}">
                <c:set var="priority" value="!"/>
            </c:when>
            <c:otherwise>
                <c:if test="${message.isLowPriority}">
                    <c:set var="priority" value="?"/>
                </c:if>
            </c:otherwise>
        </c:choose>
    </c:if>

</app:handleError>

<c:set var="focusField" value="${param.op eq 'reply' or param.op eq 'replyAll' ? 'bodyField' : 'toField'}"/>
<app:view mailbox="${mailbox}" title="${not empty compose.subject ? compose.subject : title}" selected='compose' folders="true" tags="true" searches="true" context="${null}" keys="false"
        onload="var e=document.getElementById('${focusField}'); if (e) {e.focus(); if (e.setSelectionRange) e.setSelectionRange(0,0);}" >
<body class="yui-skin-sam">
<form action="" method="post" name="composeForm" enctype="multipart/form-data" accept-charset="utf-8"  >
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
                <td class='TbTop'>
                    <table width="100%" cellspacing="0" cellpadding="0">
                        <tr valign='middle'>
                            <td align=left class="TbBt">
                                <table cellspacing="0" cellpadding="0" class='Tb'>
                                    <tr>
                                        <app:button id="OPSEND" name="actionSend" src="mail/ImgSend.gif" tooltip="send" text="send"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button id="OPCANCEL" name="actionCancel" src="common/ImgCancel.gif" tooltip="cancel" text="cancel"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button id="OPDRAFT" name="actionDraft" src="startup/ImgDraftFolder.gif" tooltip="saveDraft" text="saveDraft"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button id="OPATTACH" name="actionAttachAdd" src="startup/ImgAttachment.gif" tooltip="addAttachments" text="addAttachments"/>
                                        <c:if test="${mailbox.features.contacts or mailbox.features.gal}">
                                            <td><div class='vertSep'></div></td>
                                            <app:button id="OPADDRECIP" name="actionContactAdd" src="contacts/ImgContactsPicker.gif" tooltip="addFromContacts" text="addFromContacts"/>
                                        </c:if>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td class='ZhAppContent'>
                    <div>
                        <table cellpadding="2" cellspacing="5" style="height:80%;" width="100%" class='Compose' border="0">
                            <tr>
                                <app:button  name="actionContactAdd" width="1%" clazz="tobutton" tooltip="addFromContacts" text="to"/>
                                <td colspan="2" nowrap>
                                    <div class="ZhAC ZhACTo">
                                    <textarea  id="toField" rows="2" style='width:99%;height:40px;position:relative;' cols="80" 
                                                               name="to">${fn:escapeXml(compose.to)}</textarea>
                                        <br><div class='ZhACCont' id="toContainer" style='width:99%;top:3em;'></div></div>
                                </td>
                            </tr>

                            <tr>
                                <app:button  name="actionContactAdd" width="1%" clazz="tobutton" tooltip="addFromContacts" text="cc"/>
                                <td colspan="2" nowrap>
                                    <div class="ZhAC ZhACCc">
                                    	<textarea id="ccField" rows="2" style='width:99%;height:40px;position:relative;' cols='80' name="cc" onkeydown="return handleEnter(event);" 
                                    		onkeypress="return handleEnter(event);">${fn:escapeXml(compose.cc)}</textarea>
                                        <br><div class='ZhACCont' id="ccContainer" style='width:99%;'></div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <app:button  name="actionContactAdd" width="1%" clazz="tobutton" tooltip="addFromContacts" text="bcc"/>
                                <td colspan="2" nowrap>
                                    <div class="ZhAC ZhAcBcc">
                                        <textarea id="bccField" rows="2" style='width:99%;height:40px;position:relative;' cols='80' name="bcc" onkeydown="return handleEnter(event);" 
                                        	onkeypress="return handleEnter(event);">${fn:escapeXml(compose.bcc)}</textarea>
                                        <br><div class='ZhACCont' id="bccContainer" style='width:99%;'></div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td valign='top' align="right" nowrap  style='padding-top:4px;'> <label for="subjectField"><fmt:message key="subject"/>: </label></td>
                                <c:choose>
                                    <c:when test="${mailbox.features.mailPriority}">
                                        <td nowrap style='padding-top:4px;'><input style='width:100%; height:18px;' type="text" size="100" name="subject" id="subjectField" onkeydown="return handleEnter(event);" onkeypress="return handleEnter(event);" value="${fn:escapeXml(compose.subject)}"></td>
                                        <td nowrap align='right' style='width:5%; padding-right:10px; padding-top:4px;'>
                                            <c:if test="${mailbox.features.mailPriority}">
                                                <fmt:message key="priority"/>:
                                                <select name="priority">
                                                    <option id="OPPRIORITYHIGH" value="!"<c:if test="${priority eq '!'}"> selected</c:if>> <fmt:message key="high"/>
                                                    <option id="OPPRIORITYNORMAL" value="" <c:if test="${priority eq ''}"> selected</c:if>><fmt:message key="normal"/>
                                                    <option id="OPPRIORITYLOW" value="?"<c:if test="${priority eq '?'}"> selected</c:if>><fmt:message key="low"/>
                                                </select>
                                            </c:if>
                                        </td>
                                    </c:when>
                                    <c:otherwise>
                                        <td colspan="2" nowrap><input style='width:99%' type="text" size="100" name="subject" id="subjectField"
                                                                    value="${fn:escapeXml(compose.subject)}"></td>
                                    </c:otherwise>
                                </c:choose>
                            </tr>
                            <c:set var="firstAttachment" value="${true}"/>
                            <c:if test="${!empty compose.messageAttachments}">
                                <c:forEach var="ma" items="${compose.messageAttachments}" varStatus="status">
                                    <tr>
                                        <td align='right'>
                                            <c:if test="${firstAttachment}">
                                                <app:img altkey="ALT_ATTACHMENT" src="startup/ImgAttachment.gif"/>
                                                <c:set var="firstAttachment" value="${false}"/>
                                            </c:if>
                                        </td>
                                        <td colspan="2">
                                            <c:choose>
                                                <c:when test="${empty ma.subject}"><fmt:message var="subj" key="noSubject"/></c:when>
                                                <c:otherwise><c:set var="subj" value="${zm:truncate(ma.subject,100,true)}"/></c:otherwise>
                                            </c:choose>
                                                ${fn:escapeXml(subj)}
                                            <input type="hidden" name="messageAttachment" value="${ma.id}:${fn:escapeXml(ma.subject)}"/>
                                        </td>
                                    </tr>
                                </c:forEach>
                            </c:if>
                            <c:if test="${!empty compose.originalAttachments}">
                                <c:forEach var="part" items="${compose.originalAttachments}" varStatus="status">
                                    <app:attachment firstAttachment="${firstAttachment}" url="/service/home/~/?id=${message.id}&part=${part.partName}&auth=co"
                                            displayName="${part.displayName}" contentType="${part.contentType}"
                                            checked="${compose.checkedAttachmentNames[part.partName]}" displaySize="${part.displaySize}"
                                            value="${part.partName}" name="originalAttachment"/>
                                    <c:set var="firstAttachment" value="${false}"/>
                                </c:forEach>
                            </c:if>
                            <c:if test="${(not empty param.attachId) and (not empty param.attachUrl) and (not empty param.attachName)}">
                                <app:attachment firstAttachment="${firstAttachment}" url="${param.attachUrl}"
                                        displayName="${param.attachName}"
                                        checked="true"
                                        value="${param.attachId}" name="uploadedAttachment"/>
                            </c:if>
                            <tr>
                                <td colspan="3"  width="100%" >
                                    <textarea class='MsgCompose' name="body" id="body" rows="30" cols="80" style='width:100%'>${fn:escapeXml(isHtml ? (empty compose.htmlContent ?  compose.content : compose.htmlContent) : compose.content)}</textarea>
                                    <!-- <textarea class='MsgCompose' name="body"  rows="30" cols="80" style='width:100%'>${fn:escapeXml(compose.content)}</textarea> -->
                                   <input type="hidden" id="bodyText" class='MsgCompose' name="bodyText" value="" style='width:100%' /> 
                                    
                                </td>
                            </tr>
                        </table>
                    </div>
                </td>
            </tr>
            <tr>
                <td class='TbBottom'>
                    <table width="100%" cellspacing="0" cellpadding="0">
                        <tr valign='middle'>
                            <td align=left class="TbBt">
                                <table cellspacing="0" cellpadding="0" class='Tb'>
                                    <tr>
                                        <app:button name="actionSend" src="mail/ImgSend.gif" tooltip="send" text="send"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button name="actionCancel" src="common/ImgCancel.gif" tooltip="cancel" text="cancel"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button name="actionDraft" src="startup/ImgDraftFolder.gif" tooltip="saveDraft" text="saveDraft"/>
                                        <td><div class='vertSep'></div></td>
                                        <app:button name="actionAttachAdd" src="startup/ImgAttachment.gif" tooltip="addAttachments" text="addAttachments"/>
                                        <c:if test="${mailbox.features.contacts or mailbox.features.gal}">
                                            <td><div class='vertSep'></div></td>
                                            <app:button name="actionContactAdd" src="contacts/ImgContactsPicker.gif" tooltip="addFromContacts" text="addFromContacts"/>
                                        </c:if>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        <input type="hidden" name="sendUID" value="${fn:escapeXml(compose.sendUID)}"/>
        <input type="hidden" name="replyto" value="${fn:escapeXml(compose.replyTo)}"/>
        <input type="hidden" name="from" value="${fn:escapeXml(compose.from)}"/>
        <input type="hidden" name="inreplyto" value="${fn:escapeXml(compose.inReplyTo)}"/>
        <input type="hidden" name="messageid" value="${fn:escapeXml(compose.messageId)}"/>
        <input type="hidden" name="compNum" value="${fn:escapeXml(compose.compNum)}"/>
        <input type="hidden" name="instCompNum" value="${fn:escapeXml(compose.instanceCompNum)}"/>
        <input type="hidden" name="replytype" value="${fn:escapeXml(compose.replyType)}"/>
        <input type="hidden" name="inviteReplyVerb" value="${fn:escapeXml(compose.inviteReplyVerb)}"/>
        <input type="hidden" name="inviteReplyInst" value="${fn:escapeXml(compose.inviteReplyInst)}"/>
        <input type="hidden" name="inviteReplyAllDay" value="${fn:escapeXml(compose.inviteReplyAllDay)}"/>        
        <input type="hidden" name="crumb" value="${fn:escapeXml(mailbox.accountInfo.crumb)}"/>
        <c:if test="${message.isDraft}">
            <input type="hidden" name="draftid" value="${message.id}"/>
        </c:if>
    </form>
	<form id="SpellCheckForm">
		<input type="hidden" id="SpellCheckData" name="SpellCheckData" value=""/>
	</form>

<app:autoComplete>
    initAuto("toField","toContainer");
    initAuto("ccField","ccContainer");
    initAuto("bccField","bccContainer");
</app:autoComplete>

<c:choose>
	<c:when test="${(isHtml)}" >
		<script type="text/javascript">
			<!--

			submitCompose = function(){
				myEditor.saveHTML();
				var stripHTML = /<\S[^><]*>/g;
				var stripNBSP  = /&nbsp;/g
				document.getElementById("bodyText").value = document.getElementById("body").value.replace(stripNBSP, ' ').replace(/<br>/gi, '\n').replace(stripHTML, '').replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
			}
			var myEditor = new YAHOO.widget.Editor('body', {
				height: '300px',
				width: '100%',
				dompath: true, //Turns on the bar at the bottom
				animate: true, //Animates the opening, closing and moving of Editor windows
				css: 'html {height: 95%;}body {height: 100%;padding: 7px; background-color: #fff; color:<c:out value="${mailbox.prefs.htmlEditorDefaultFontColor}"/>; font-size:${mailbox.prefs.htmlEditorDefaultFontSize}; font-family: <c:out value="${mailbox.prefs.htmlEditorDefaultFontFamily}"/>,helvetica,clean,sans-serif;}a {color: blue;text-decoration: underline;cursor: pointer;}.warning-localfile {border-bottom: 1px dashed red !important;}.yui-busy {cursor: wait !important;}img.selected { border: 2px dotted #808080;}img {cursor: pointer !important;border: none;}',
				extracss: '.yui-spellcheck { background-color: yellow; }'
			});
			enableSpellCheck(myEditor);

			myEditor.on('editorContentLoaded', function() {
				setTimeout(function() {
					var b = document.getElementById('body');
					var html = b.innerHTML.replace(/\n/g, '<br>').replace(/\t/g, '    ').replace(/  /g, '  ').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');
					myEditor.setEditorHTML(html);
				}, 1000);
			}, myEditor, true);

			myEditor.render();
			// -->
		</script>
	</c:when>
	<c:otherwise>
		<script type="text/javascript">
		<!-- <%-- Move the body caret to the top of the textarea--%>
			var bodyEl = document.getElementById('body');
			if (bodyEl.setSelectionRange) { <%-- FF --%>
				bodyEl.setSelectionRange(0, 0);
			} else if (bodyEl.createTextRange) { // IE
				var range = bodyEl.createTextRange();
				range.collapse(true);
				range.moveStart("character", -60000);
				range.collapse(true);
				range.select();
				window._composerBookmark = document.selection.createRange().getBookmark();
				setTimeout(function(){
					bodyEl.onfocus = _on_composerFocus_IE;
					bodyEl.onmouseup = bodyEl.onkeyup = _on_composerEvent_IE;
				}, 10);
			}

			function _on_composerFocus_IE() {
				if (window._composerBookmark) {
					setTimeout(function() {
						var range = document.selection.createRange();
						range.moveToBookmark(window._composerBookmark);
						range.select();
					}, 10);
				}
			}

			function _on_composerEvent_IE(ev) {
				var range = document.selection.createRange();
				if (range.parentElement() === this) /*this* is the textarea*/ {
					window._composerBookmark = range.getBookmark();
				}
			}
		// -->
		</script>
	</c:otherwise>
</c:choose>
<script type="text/javascript">
<!--
// for Save Draft
var eleD = document.getElementById("SOPDRAFT");
eleD.onclick = function () {
	cancelOnbeforeUnload();
<c:if test="${(isHtml)}" >
           submitCompose();
</c:if>
}
// for ATTACH
var eleA = document.getElementById("SOPATTACH");
eleA.onclick = function () {
	cancelOnbeforeUnload();
<c:if test="${(isHtml)}" >
           submitCompose();
</c:if>
}
// for Mail Send
var ele = document.getElementById("SOPSEND");
ele.onclick = function () {
	cancelOnbeforeUnload();
<c:if test="${(isHtml)}" >
           submitCompose();
</c:if>
	return checkSubject();
}
var eleI = document.getElementById("IOPSEND");
eleI.onclick = function () {
	cancelOnbeforeUnload();
<c:if test="${(isHtml)}" >
           submitCompose();
</c:if>
	return checkSubject();
}
function checkSubject() {
	var elesub = document.getElementById("subjectField");
	if(trim(elesub.value) == '') {
		if(confirm("<fmt:message key="compSubjectMissing"/>")) {
		return true;
	} else{
		return false;
	}
	} else {
		return true;
	}
}
function trim(strVal){
	return strVal.replace(/^\s*/, "").replace(/\s*$/, "");
}


function handleEnter (ev) {
	var keyCode = ev.keyCode ? ev.keyCode : ev.which ? ev.which : ev.charCode;
	if (keyCode == 13) 	return false;
	else return true;
}

var zclick = function(id) { var e = document.getElementById(id); if (e) e.click(); }
var zselect = function(id) { var e = document.getElementById(id); if (e) { e.selected = true; }}

var _form = document.forms["composeForm"];

var _fields = {} ;

grabFieldValues = function(){
	var _el = _form.elements;
	for ( var _i=0;_i < _el.length; _i++){
		if(_el[_i].type == "text" || _el[_i].type == "textarea" ){
			_fields[_el[_i].name] = _el[_i].value;
		}
	}
	<c:if test="${(isHtml)}" >
	setTimeout(function() { myEditor.saveHTML() }, 1000);  // Saves to content text area
	_fields["body"] = trim(document.getElementById("body").value);
	</c:if>
}
grabFieldValues();

checkForChanges = function(){
	var _checkFail = false;
	var _el = _form.elements;
	for ( var _i=0;_i < _el.length; _i++){
		if(_el[_i].type == "text" || _el[_i].type == "textarea"){
			if(_fields[_el[_i].name] != _el[_i].value) { _checkFail = true;}
		}
	}
<c:if test="${(isHtml)}">
	myEditor.saveHTML();
	_bodyVal = trim(document.getElementById("body").value);
	if(trim(_fields["body"]) != _bodyVal) {
		_checkFail = true;
		if(_fields["body"] == "<html><body>"+_bodyVal+"</body></html>"){  // Allow after save draft
			_checkFail = false;
			}

	}
</c:if>

if(_checkFail){
		return "<fmt:message key="composeExitConfirmation"/>";
	}else{
		return;
	}
}

window.onbeforeunload = checkForChanges;

cancelOnbeforeUnload = function(){
	window.onbeforeunload = null;
}

// -->
</script>

    <app:keyboard cache="mail.compose" globals="false" passspecial="true" mailbox="${mailbox}">
        <zm:bindKey message="compose.Send" func="function() { zclick('SOPSEND')}"/>
        <zm:bindKey message="compose.Save" func="function() { zclick('SOPDRAFT')}"/>
        <zm:bindKey message="compose.Attachment" func="function() { zclick('SOPATTACH')}"/>
        <zm:bindKey message="compose.AddressPicker" func="function() { zclick('SOPADDRECIP')}"/>
        <zm:bindKey message="compose.HighPriority" func="function() { zselect('OPPRIORITYHIGH')}"/>
        <zm:bindKey message="compose.NormalPriority" func="function() { zselect('OPPRIORITYNORMAL')}"/>
        <zm:bindKey message="compose.LowPriority" func="function() { zselect('OPPRIORITYLOW')}"/>
   </app:keyboard>
</body>
</app:view>

